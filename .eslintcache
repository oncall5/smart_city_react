[{"C:\\Users\\hekai\\Desktop\\前端学习\\my-app\\src\\index.js":"1","C:\\Users\\hekai\\Desktop\\前端学习\\my-app\\src\\App.js":"2","C:\\Users\\hekai\\Desktop\\前端学习\\my-app\\src\\reportWebVitals.js":"3","C:\\Users\\hekai\\Desktop\\前端学习\\my-app\\src\\router\\router.jsx":"4","C:\\Users\\hekai\\Desktop\\前端学习\\my-app\\src\\components\\LoadingPage\\index.js":"5","C:\\Users\\hekai\\Desktop\\前端学习\\my-app\\src\\layouts\\BlankLayout\\index.jsx":"6","C:\\Users\\hekai\\Desktop\\前端学习\\my-app\\src\\layouts\\BasicLayout\\index.jsx":"7","C:\\Users\\hekai\\Desktop\\前端学习\\my-app\\src\\view\\Home\\index.jsx":"8","C:\\Users\\hekai\\Desktop\\前端学习\\my-app\\src\\view\\Login\\index.jsx":"9","C:\\Users\\hekai\\Desktop\\前端学习\\my-app\\src\\layouts\\MainHeader\\index.jsx":"10","C:\\Users\\hekai\\Desktop\\前端学习\\my-app\\src\\view\\citybrain\\traffic\\MobileGps\\index.jsx":"11","C:\\Users\\hekai\\Desktop\\前端学习\\my-app\\src\\view\\citybrain\\traffic\\Flights\\index.jsx":"12","C:\\Users\\hekai\\Desktop\\前端学习\\my-app\\src\\view\\citybrain\\traffic\\Trajectory_detection\\index.jsx":"13","C:\\Users\\hekai\\Desktop\\前端学习\\my-app\\src\\view\\citybrain\\traffic\\Trajectory_interpolation\\index.jsx":"14","C:\\Users\\hekai\\Desktop\\前端学习\\my-app\\src\\view\\citybrain\\traffic\\LicensePlate\\index.jsx":"15","C:\\Users\\hekai\\Desktop\\前端学习\\my-app\\src\\view\\sensor\\ZhijiangAll\\index.jsx":"16","C:\\Users\\hekai\\Desktop\\前端学习\\my-app\\src\\view\\sensor\\Summary_index\\index.jsx":"17","C:\\Users\\hekai\\Desktop\\前端学习\\my-app\\src\\view\\camera\\Eastexitcamera\\index.jsx":"18","C:\\Users\\hekai\\Desktop\\前端学习\\my-app\\src\\view\\camera\\northcamera\\index.jsx":"19","C:\\Users\\hekai\\Desktop\\前端学习\\my-app\\src\\view\\camera\\Northcamera\\index.jsx":"20","C:\\Users\\hekai\\Desktop\\前端学习\\my-app\\src\\view\\rule\\Rule\\index.jsx":"21","C:\\Users\\hekai\\Desktop\\前端学习\\my-app\\src\\view\\rule\\Rule3\\index.jsx":"22","C:\\Users\\hekai\\Desktop\\前端学习\\my-app\\src\\view\\colorCast\\ColorCast\\index.jsx":"23","C:\\Users\\hekai\\Desktop\\前端学习\\my-app\\src\\view\\weibo\\Weibo\\index.jsx":"24","C:\\Users\\hekai\\Desktop\\前端学习\\my-app\\src\\api\\axios.js":"25","C:\\Users\\hekai\\Desktop\\前端学习\\my-app\\src\\global\\common.js":"26","C:\\Users\\hekai\\Desktop\\前端学习\\my-app\\src\\view\\citybrain\\traffic\\TrajectoryDetail\\index.jsx":"27","C:\\Users\\hekai\\Desktop\\前端学习\\my-app\\src\\view\\map\\Map\\index.jsx":"28","C:\\Users\\hekai\\Desktop\\前端学习\\my-app\\src\\plugins\\leaflet\\leaflet.js":"29","C:\\Users\\hekai\\Desktop\\前端学习\\my-app\\src\\plugins\\leaflet\\map.js":"30","C:\\Users\\hekai\\Desktop\\前端学习\\my-app\\src\\view\\map\\Map_test\\index.jsx":"31","C:\\Users\\hekai\\Desktop\\前端学习\\my-app\\src\\Mixin\\LocalStorageMixin\\LocalStorageMixin.js":"32","C:\\Users\\hekai\\Desktop\\前端学习\\my-app\\src\\Mixin\\SearchMixin\\SearchMixin.js":"33","C:\\Users\\hekai\\Desktop\\前端学习\\my-app\\src\\utils\\tool.js":"34","C:\\Users\\hekai\\Desktop\\前端学习\\my-app\\src\\components\\rule\\AddRuleDialog\\index.jsx":"35","C:\\Users\\hekai\\Desktop\\前端学习\\my-app\\src\\components\\rule\\RegexInput\\index.jsx":"36","C:\\Users\\hekai\\Desktop\\前端学习\\my-app\\src\\components\\rule\\MinMaxInput\\index.jsx":"37"},{"size":728,"mtime":1703595540710,"results":"38","hashOfConfig":"39"},{"size":2306,"mtime":1703595300763,"results":"40","hashOfConfig":"39"},{"size":362,"mtime":1703321847592,"results":"41","hashOfConfig":"39"},{"size":6745,"mtime":1703750984429,"results":"42","hashOfConfig":"39"},{"size":263,"mtime":1703313703809,"results":"43","hashOfConfig":"39"},{"size":148,"mtime":1703581794325,"results":"44","hashOfConfig":"39"},{"size":529,"mtime":1703661625511,"results":"45","hashOfConfig":"39"},{"size":6687,"mtime":1703678994090,"results":"46","hashOfConfig":"39"},{"size":4146,"mtime":1703675451595,"results":"47","hashOfConfig":"39"},{"size":2471,"mtime":1703661670779,"results":"48","hashOfConfig":"39"},{"size":1142,"mtime":1703682683611,"results":"49","hashOfConfig":"39"},{"size":3455,"mtime":1704283246830,"results":"50","hashOfConfig":"39"},{"size":4113,"mtime":1704195377362,"results":"51","hashOfConfig":"39"},{"size":3990,"mtime":1704196389320,"results":"52","hashOfConfig":"39"},{"size":1680,"mtime":1704197272986,"results":"53","hashOfConfig":"39"},{"size":106,"mtime":1703656927395,"results":"54","hashOfConfig":"39"},{"size":106,"mtime":1703656963779,"results":"55","hashOfConfig":"39"},{"size":1559,"mtime":1704200991418,"results":"56","hashOfConfig":"39"},{"size":106,"mtime":1703657407198,"results":"57","hashOfConfig":"39"},{"size":1556,"mtime":1704200689038,"results":"58","hashOfConfig":"39"},{"size":5787,"mtime":1704335861690,"results":"59","hashOfConfig":"39"},{"size":8656,"mtime":1704374395381,"results":"60","hashOfConfig":"39"},{"size":6167,"mtime":1704424909517,"results":"61","hashOfConfig":"39"},{"size":16310,"mtime":1704527222133,"results":"62","hashOfConfig":"39"},{"size":2142,"mtime":1669341886000,"results":"63","hashOfConfig":"39"},{"size":155,"mtime":1668172106000,"results":"64","hashOfConfig":"39"},{"size":2328,"mtime":1704194020880,"results":"65","hashOfConfig":"39"},{"size":1396,"mtime":1704193771072,"results":"66","hashOfConfig":"39"},{"size":4586,"mtime":1704183952113,"results":"67","hashOfConfig":"39"},{"size":1618,"mtime":1704183461749,"results":"68","hashOfConfig":"39"},{"size":1773,"mtime":1704179873556,"results":"69","hashOfConfig":"39"},{"size":287,"mtime":1704265146540,"results":"70","hashOfConfig":"39"},{"size":1405,"mtime":1704266195694,"results":"71","hashOfConfig":"39"},{"size":297,"mtime":1668172106000,"results":"72","hashOfConfig":"39"},{"size":3395,"mtime":1704352758166,"results":"73","hashOfConfig":"39"},{"size":371,"mtime":1704352548539,"results":"74","hashOfConfig":"39"},{"size":959,"mtime":1704354650485,"results":"75","hashOfConfig":"39"},{"filePath":"76","messages":"77","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},"1lw6k1p",{"filePath":"79","messages":"80","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"81","messages":"82","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"83","messages":"84","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"85","usedDeprecatedRules":"78"},{"filePath":"86","messages":"87","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"88","messages":"89","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"90","messages":"91","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"92","usedDeprecatedRules":"78"},{"filePath":"93","messages":"94","errorCount":0,"fatalErrorCount":0,"warningCount":15,"fixableErrorCount":0,"fixableWarningCount":0,"source":"95","usedDeprecatedRules":"78"},{"filePath":"96","messages":"97","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"98","usedDeprecatedRules":"78"},{"filePath":"99","messages":"100","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"101","usedDeprecatedRules":"78"},{"filePath":"102","messages":"103","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"104","usedDeprecatedRules":"78"},{"filePath":"105","messages":"106","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"107","usedDeprecatedRules":"78"},{"filePath":"108","messages":"109","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"110","usedDeprecatedRules":"78"},{"filePath":"111","messages":"112","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"113","usedDeprecatedRules":"78"},{"filePath":"114","messages":"115","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"116","usedDeprecatedRules":"78"},{"filePath":"117","messages":"118","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"119","messages":"120","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"121","messages":"122","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"123","usedDeprecatedRules":"78"},{"filePath":"124","messages":"125","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"126","messages":"127","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"128","usedDeprecatedRules":"78"},{"filePath":"129","messages":"130","errorCount":0,"fatalErrorCount":0,"warningCount":16,"fixableErrorCount":0,"fixableWarningCount":0,"source":"131","usedDeprecatedRules":"78"},{"filePath":"132","messages":"133","errorCount":0,"fatalErrorCount":0,"warningCount":31,"fixableErrorCount":0,"fixableWarningCount":0,"source":"134","usedDeprecatedRules":"78"},{"filePath":"135","messages":"136","errorCount":0,"fatalErrorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":"137","usedDeprecatedRules":"78"},{"filePath":"138","messages":"139","errorCount":0,"fatalErrorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"140","messages":"141","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"142","messages":"143","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"144","messages":"145","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"146","usedDeprecatedRules":"78"},{"filePath":"147","messages":"148","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"149","messages":"150","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"151","usedDeprecatedRules":"78"},{"filePath":"152","messages":"153","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"154","usedDeprecatedRules":"78"},{"filePath":"155","messages":"156","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"157","messages":"158","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"159","messages":"160","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"161","messages":"162","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"163","messages":"164","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"165","usedDeprecatedRules":"78"},{"filePath":"166","messages":"167","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"168","messages":"169","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},"C:\\Users\\hekai\\Desktop\\前端学习\\my-app\\src\\index.js",[],["170","171"],"C:\\Users\\hekai\\Desktop\\前端学习\\my-app\\src\\App.js",[],"C:\\Users\\hekai\\Desktop\\前端学习\\my-app\\src\\reportWebVitals.js",[],"C:\\Users\\hekai\\Desktop\\前端学习\\my-app\\src\\router\\router.jsx",["172"],"// import {Navigate} from 'react-router-dom'\r\nimport React, { lazy } from 'react';\r\nimport BlankLayout from '../layouts/BlankLayout'\r\nimport BasicLayout from '../layouts/BasicLayout'\r\nconst routes = [\r\n    {\r\n        path: '/',\r\n        component: BlankLayout,\r\n        childRoutes: [\r\n            {\r\n                path: '/login',\r\n                name: '登录',\r\n                component: lazy(() => import('../view/Login'))\r\n            },\r\n            {\r\n                path: '/',\r\n                component: BasicLayout,\r\n                childRoutes: [\r\n                    {\r\n                        path: '/introduce',\r\n                        name: '系统介绍',\r\n                        component: lazy(() => import('../view/Home')),\r\n                    },\r\n                    {\r\n                        path: '/dataclean/citybrain',\r\n                        name: '城市大脑数据',\r\n                        childRoutes: [\r\n                            {\r\n                                path: '/dataclean/citybrain/traffic',\r\n                                name: '智慧交通系统',\r\n                                childRoutes: [\r\n                                    {\r\n                                        path: '/dataclean/citybrain/traffic/mobileGps',\r\n                                        name: '行人位置获取',\r\n                                        component: lazy(() => import('../view/citybrain/traffic/MobileGps')),\r\n                                    },\r\n                                    {\r\n                                        path: '/dataclean/citybrain/traffic/queryFilghtsData',\r\n                                        name: \"GPS与道路转换\",\r\n                                        component: lazy(() => import('../view/citybrain/traffic/Flights')),\r\n                                    },\r\n                                    {\r\n                                        path: '/dataclean/citybrain/traffic/trajectory_interpolation',\r\n                                        name: \"轨迹数据修复\",\r\n                                        component: lazy(() => import('../view/citybrain/traffic/Trajectory_interpolation')),\r\n                                    },\r\n                                    {\r\n                                        path: '/dataclean/citybrain/traffic/trajectory_detection',\r\n                                        name: \"轨迹数据异常检测\",\r\n                                        component: lazy(() => import('../view/citybrain/traffic/Trajectory_detection')),\r\n                                    },\r\n                                    {\r\n                                        path: '/dataclean/citybrain/traffic/licensePlate',\r\n                                        name: \"汽车车牌转换\",\r\n                                        component: lazy(() => import('../view/citybrain/traffic/LicensePlate')),\r\n                                    },\r\n                                    {\r\n                                        path:'/dataclean/citybrain/traffic/trajectoryDetail',\r\n                                        name:\"轨迹详情\",\r\n                                        component: lazy(() => import('../view/citybrain/traffic/TrajectoryDetail')),\r\n                                    }\r\n                                ]\r\n                            }\r\n                        ]\r\n                    },\r\n                    {\r\n                        path: '/dataclean/sensor',\r\n                        name: '传感器',\r\n                        childRoutes: [\r\n                            {\r\n                                path: '/dataclean/sensor/ZhijiangAll',\r\n                                name: '之江传感器',\r\n                                component: lazy(() => import('../view/sensor/ZhijiangAll')),\r\n                            },\r\n                            {\r\n                                path: '/dataclean/sensor/Summary_index',\r\n                                name: '指标汇总',\r\n                                component: lazy(() => import('../view/sensor/Summary_index')),\r\n                            },\r\n                        ]\r\n                    },\r\n                    {\r\n                        path: '/dataclean/camera',\r\n                        name: '摄像头',\r\n                        childRoutes: [\r\n                            {\r\n                                path: '/dataclean/camera/ten_floor',\r\n                                name: '十号楼',\r\n                                childRoutes: [\r\n                                    {\r\n                                        path: '/dataclean/camera/ten_floor/eastexitcamera',\r\n                                        name: '东大门出口',\r\n                                        component: lazy(() => import('../view/camera/Eastexitcamera')),\r\n                                    },\r\n                                    {\r\n                                        path: '/dataclean/camera/ten_floor/northcamera',\r\n                                        name: '北出口摄像头',\r\n                                        component: lazy(() => import('../view/camera/Northcamera')),\r\n                                    }\r\n                                ]\r\n                            }\r\n                        ]\r\n                    },\r\n                    {\r\n                        path: '/dataclean/rule',\r\n                        name: '规则引擎',\r\n                        childRoutes:[\r\n                            {\r\n                                path: '/dataclean/rule/rule',\r\n                                name: '自定义规则引擎',\r\n                                component: lazy(() => import('../view/rule/Rule')),\r\n                            },\r\n                            {\r\n                                path: '/dataclean/rule/rule3',\r\n                                name: '智能规则引擎',\r\n                                component: lazy(() => import('../view/rule/Rule3')),\r\n                            },\r\n                        ]\r\n                    },\r\n                    {\r\n                        path: '/dataclean/colorCast',\r\n                        name:'偏色检测',\r\n                        component:lazy(() => import('../view/colorCast/ColorCast'))\r\n                    },\r\n                    {\r\n                        path: '/dataclean/weibo',\r\n                        name:'社群数据',\r\n                        component:lazy(() => import('../view/weibo/Weibo'))\r\n                    },\r\n                    { path: '/', exact: true, redirect: '/introduce' }\r\n                ]\r\n            }\r\n\r\n        ]\r\n    },\r\n\r\n]\r\nexport default routes","C:\\Users\\hekai\\Desktop\\前端学习\\my-app\\src\\components\\LoadingPage\\index.js",[],"C:\\Users\\hekai\\Desktop\\前端学习\\my-app\\src\\layouts\\BlankLayout\\index.jsx",[],"C:\\Users\\hekai\\Desktop\\前端学习\\my-app\\src\\layouts\\BasicLayout\\index.jsx",["173","174","175","176","177","178"],"import React from 'react'\r\nimport { Breadcrumb, Layout, Menu, theme } from 'antd';\r\nimport './style.less'\r\nimport MainHeader from '../MainHeader';\r\n\r\nexport default function index({ route, children }) {\r\n  const { Header, Content, Footer } = Layout;\r\n  console.log(\"b\", route, children)\r\n  return (\r\n    <Layout className='home-container'>\r\n      <MainHeader routes={route.childRoutes} className='el-header' />\r\n      <Layout.Content className='main-section'>\r\n        {children}\r\n      </Layout.Content>\r\n    </Layout>\r\n  )\r\n}\r\n","C:\\Users\\hekai\\Desktop\\前端学习\\my-app\\src\\view\\Home\\index.jsx",["179","180","181","182","183","184","185","186","187","188","189","190","191","192","193"],"import React, { useState } from 'react'\r\nimport myImage from '../../assets/1.png'\r\nimport { Dropdown, Button, Space } from 'antd'\r\nimport { DownOutlined, SmileOutlined, } from '@ant-design/icons';\r\nimport { useHistory } from 'react-router-dom';\r\nimport './style.less'\r\n\r\nexport default function Home() {\r\n  const items_camera = [\r\n    {\r\n      key: '1',\r\n      label: (\r\n        '餐厅通道'\r\n      ),\r\n      onClick: (history) => {\r\n        history.push('/dataclean/camera/ten_floor/eastexitcamera')\r\n      }\r\n    },\r\n    {\r\n      key: '2',\r\n      label: (\r\n        '摄像头'\r\n      ),\r\n      onClick: (history) => {\r\n        history.push('/dataclean/camera/ten_floor/northcamera')\r\n      },\r\n    }\r\n\r\n  ];\r\n  const items_csdn = [\r\n    {\r\n      key: '1',\r\n      label: (\r\n        '轨迹数据修复'\r\n      ),\r\n      onClick: (history) => {\r\n        history.push('/dataclean/citybrain/traffic/trajectory_interpolation')\r\n      }\r\n    },\r\n    {\r\n      key: '2',\r\n      label: (\r\n        '轨迹数据异常检测'\r\n      ),\r\n      onClick: (history) => {\r\n        history.push('/dataclean/citybrain/traffic/trajectory_detection')\r\n      }\r\n    },\r\n    {\r\n      key: '3',\r\n      label: (\r\n        '汽车车牌转换'\r\n      ),\r\n      onClick: (history) => {\r\n        history.push('/dataclean/citybrain/traffic/licensePlate')\r\n      }\r\n    }\r\n  ];\r\n  const items_cgq = [\r\n    {\r\n      key: '1',\r\n      label: (\r\n        '之江传感器'\r\n      ),\r\n      onClick: (history) => {\r\n        history.push('/dataclean/sensor/ZhijiangAll')\r\n      }\r\n    },\r\n    {\r\n      key: '2',\r\n      label: (\r\n        '指标汇总'\r\n      ),\r\n      onClick: (history) => {\r\n        history.push('/dataclean/sensor/Summary_index')\r\n      }\r\n    }\r\n  ];\r\n  const items_gzyq = [\r\n    {\r\n      key: '1',\r\n      label: (\r\n        '自定义规则引擎'\r\n      ),\r\n      onClick: (history) => {\r\n        history.push('/dataclean/rule/rule')\r\n      }\r\n    },\r\n    {\r\n      key: '2',\r\n      label: (\r\n        '智能规则引擎'\r\n      ),\r\n      onClick: (history) => {\r\n        history.push('/dataclean/rule/rule3')\r\n      }\r\n    }\r\n  ];\r\n  const items_psjc = [\r\n    {\r\n      key: '1',\r\n      label: (\r\n        '偏色检测'\r\n      ),\r\n      onClick: (history) => {\r\n        history.push('/dataclean/colorCast')\r\n      }\r\n    }\r\n\r\n  ];\r\n  const items_sqsj = [\r\n    {\r\n      key: '1',\r\n      label: (\r\n        '社群数据'\r\n      ),\r\n      onClick: (history) => {\r\n        history.push('/dataclean/weibo')\r\n      }\r\n    }\r\n\r\n  ];\r\n  const history = useHistory();\r\n  const containerStyle = {\r\n    backgroundImage: `url(${myImage})`,\r\n    backgroundSize: 'cover',\r\n    backgroundPosition: 'center',\r\n  };\r\n  const handleItemClick = (onClick) => {\r\n    onClick(history);\r\n  };\r\n  return (\r\n    <div className=\"app-container\" style={containerStyle}>\r\n      <div className='sxt1'>\r\n        <Dropdown\r\n          menu={{\r\n            items: items_camera.map((item) => ({\r\n              ...item,\r\n              onClick: () => handleItemClick(item.onClick),\r\n            })),\r\n          }}\r\n        >\r\n          <a onClick={(e) => e.preventDefault()}>\r\n            <Space direction='vertical'>\r\n              摄像头\r\n              <img src={require('../../assets/04.jpeg').default} style={{ height: '50px' }} />\r\n              <DownOutlined />\r\n            </Space>\r\n          </a>\r\n        </Dropdown>\r\n      </div>\r\n      <div className='csdn' >\r\n        <Dropdown\r\n          menu={{\r\n            items: items_csdn.map((item) => ({\r\n              ...item,\r\n              onClick: () => handleItemClick(item.onClick),\r\n            })),\r\n          }}\r\n          autoAdjustOverflow\r\n          autoFocus=\"true\"\r\n          placement=\"top\"\r\n        >\r\n          <a onClick={(e) => e.preventDefault()}>\r\n            <Space direction='vertical'>\r\n              城市大脑数据\r\n              <img src={require('../../assets/0.jpeg').default} style={{ height: '50px' }} />\r\n              <DownOutlined />\r\n            </Space>\r\n          </a>\r\n        </Dropdown>\r\n      </div>\r\n      <div className='cgq' >\r\n        <Dropdown\r\n          menu={{\r\n            items: items_cgq.map((item) => ({\r\n              ...item,\r\n              onClick: () => handleItemClick(item.onClick),\r\n            })),\r\n          }}\r\n          autoAdjustOverflow\r\n          autoFocus=\"true\"\r\n          placement=\"bottom\"\r\n        >\r\n          <a onClick={(e) => e.preventDefault()}>\r\n            <Space direction='vertical'>\r\n              传感器\r\n              <img src={require('../../assets/3.jpeg').default} style={{ height: '50px' }} />\r\n              <DownOutlined />\r\n            </Space>\r\n          </a>\r\n        </Dropdown>\r\n      </div>\r\n      <div className='gzyq' >\r\n        <Dropdown\r\n          menu={{\r\n            items: items_gzyq.map((item) => ({\r\n              ...item,\r\n              onClick: () => handleItemClick(item.onClick),\r\n            })),\r\n          }}\r\n          autoAdjustOverflow\r\n          autoFocus=\"true\"\r\n          placement=\"bottom\"\r\n        >\r\n          <a onClick={(e) => e.preventDefault()}>\r\n            <Space direction='vertical'>\r\n              规则引擎\r\n              <img src={require('../../assets/05.jpeg').default} style={{ height: '50px' }} />\r\n              <DownOutlined />\r\n            </Space>\r\n          </a>\r\n        </Dropdown>\r\n      </div>\r\n      <div className='psjc' >\r\n        <Dropdown\r\n          menu={{\r\n            items: items_psjc.map((item) => ({\r\n              ...item,\r\n              onClick: () => handleItemClick(item.onClick),\r\n            })),\r\n          }}\r\n          autoAdjustOverflow\r\n          autoFocus=\"true\"\r\n          placement=\"bottom\"\r\n        >\r\n          <a onClick={(e) => e.preventDefault()}>\r\n            <Space direction='vertical'>\r\n              偏色检测\r\n              <img src={require('../../assets/06.jpeg').default} style={{ height: '50px' }} />\r\n              <DownOutlined />\r\n            </Space>\r\n          </a>\r\n        </Dropdown>\r\n      </div>\r\n      <div className='sqsj' >\r\n        <Dropdown\r\n          menu={{\r\n            items: items_sqsj.map((item) => ({\r\n              ...item,\r\n              onClick: () => handleItemClick(item.onClick),\r\n            })),\r\n          }}\r\n          autoAdjustOverflow\r\n          autoFocus=\"true\"\r\n          placement=\"bottom\"\r\n        >\r\n          <a onClick={(e) => e.preventDefault()}>\r\n            <Space direction='vertical'>\r\n              社群数据\r\n              <img src={require('../../assets/07.jpeg').default} style={{ height: '50px' }} />\r\n              <DownOutlined />\r\n            </Space>\r\n          </a>\r\n        </Dropdown>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n","C:\\Users\\hekai\\Desktop\\前端学习\\my-app\\src\\view\\Login\\index.jsx",["194"],"import React from 'react'\r\nimport { Button, Checkbox, Form, Input } from 'antd';\r\nimport { useHistory } from 'react-router-dom';\r\nimport './style.less'\r\nimport axios from \"axios\";\r\nimport myImage from '../../assets/1.png'\r\nexport default function Login() {\r\n    const containerStyle = {\r\n        backgroundImage: `url(${myImage})`,\r\n        backgroundSize: 'cover',\r\n        backgroundPosition: 'center',\r\n      };\r\n    const onFinish = (values) => {\r\n        console.log('success:', values);\r\n        history.push('/')\r\n        axios.get('http://10.11.24.169:8181/dataclean/login',{params:{username:loginForm.username,password:loginForm.password}}).then(res => {\r\n        console.log(res)\r\n        if(res.data===\"登录成功\") {\r\n            alert('success')\r\n        }\r\n        else{\r\n          this.$message.error(\"用户名或密码错误\");\r\n        //this.flightstarget=res\r\n        }\r\n      });\r\n      };\r\n    const onFinishFailed = (errorInfo) => {\r\n        console.log('Failed:', errorInfo);\r\n      };\r\n    const history = useHistory();\r\n    \r\n    const [loginForm,setLoginForm] = React.useState({\r\n        username: 'admin',\r\n        password: '123456'\r\n      })\r\n    \r\n    return (\r\n        <div className=\"login_container\">\r\n            <div className=\"background\" style={containerStyle}>\r\n                <div className=\"login_box\">\r\n                    <div className=\"avatar_box\">\r\n                        <img src={\"https://img95.699pic.com/photo/40250/3647.jpg_wh300.jpg\"} alt=\"\" />\r\n                    </div >\r\n                    <Form\r\n                        name=\"basic\"\r\n                        labelCol={{\r\n                            span: 8,\r\n                        }}\r\n                        wrapperCol={{\r\n                            span: 16,\r\n                        }}\r\n                        style={{\r\n                            maxWidth: 600,\r\n                        }}\r\n                        initialValues={{\r\n                            remember: true,\r\n                        }}\r\n                        onFinish={onFinish}\r\n                        onFinishFailed={onFinishFailed}\r\n                        autoComplete=\"off\"\r\n                        className='login_from'\r\n                    >\r\n                        <Form.Item\r\n                            label=\"Username\"\r\n                            name=\"username\"\r\n                            rules={[\r\n                                { required: true, message: '请输入登录名称', trigger: 'blur' }\r\n                            ]}\r\n                            initialValue={loginForm.username}\r\n                        >\r\n                            <Input/>\r\n                        </Form.Item>\r\n\r\n                        <Form.Item\r\n                            label=\"Password\"\r\n                            name=\"password\"\r\n                            rules={[\r\n                                { required: true, message: '请输入登录密码', trigger: 'blur' }\r\n                            ]}\r\n                            initialValue={loginForm.password}\r\n                        >\r\n                            <Input.Password />\r\n                        </Form.Item>\r\n\r\n                        <Form.Item\r\n                            name=\"remember\"\r\n                            valuePropName=\"checked\"\r\n                            wrapperCol={{\r\n                                offset: 8,\r\n                                span: 16,\r\n                            }}\r\n                        >\r\n                            <Checkbox>Remember me</Checkbox>\r\n                        </Form.Item>\r\n\r\n                        <Form.Item\r\n                            wrapperCol={{\r\n                                offset: 8,\r\n                                span: 16,\r\n                            }}\r\n                        >\r\n                            <Button type=\"primary\" htmlType=\"submit\" className='btns' >\r\n                                Submit\r\n                            </Button>\r\n                        </Form.Item>\r\n                    </Form>\r\n                </div >\r\n            </div >\r\n        </div>\r\n    )\r\n}\r\n","C:\\Users\\hekai\\Desktop\\前端学习\\my-app\\src\\layouts\\MainHeader\\index.jsx",["195","196","197","198","199","200","201"],"import React from 'react'\r\nimport { Link, useLocation } from 'react-router-dom';\r\nimport { Breadcrumb, Layout, Menu, theme } from 'antd';\r\nimport { RocketTwoTone } from '@ant-design/icons';\r\nimport './style.less'\r\nexport default function index({ routes }) {\r\n    const { Header, Content, Footer } = Layout;\r\n    const renderMenuItem = (target) =>\r\n        target\r\n            .filter((item) => item.path && item.name)\r\n            .map((subMenu) => {\r\n                //这里分为俩类，一种是有path和name这俩个子项，同时含有子菜单，一种是有path和name，但是没有子菜单，那就会只渲染还成为一个普通的菜单项\r\n                if (subMenu.childRoutes && !!subMenu.childRoutes.find((child) => child.path && child.name)) {\r\n                    return (\r\n                        <Menu.SubMenu\r\n                            key={subMenu.path}\r\n                            title={\r\n                                <div>\r\n                                    {!!subMenu.icon && subMenu.icon}\r\n                                    <span>{subMenu.name}</span>\r\n                                </div>\r\n                            }\r\n                        >\r\n                            {renderMenuItem(subMenu.childRoutes)}\r\n                        </Menu.SubMenu>\r\n                    );\r\n                }\r\n                return (\r\n                    <Menu.Item key={subMenu.path}>\r\n                        <Link to={subMenu.path}>\r\n                            <span>\r\n                                {!!subMenu.icon && subMenu.icon}\r\n                                <span>{subMenu.name}</span>\r\n                            </span>\r\n                        </Link>\r\n                    </Menu.Item>\r\n                );\r\n            });\r\n\r\n    return (\r\n        <Layout>\r\n            <span className=\"introduct\">国家重点研发计划项目:面向城市公共服务的高效融合与动态认知技术和平台(2019YFB2102100)</span>\r\n            <span className=\"introduct\">课题一:多源多模数据实时采集与协同感知演示系统</span>\r\n            <Menu\r\n                mode=\"horizontal\"\r\n                theme=\"#545c64\"\r\n                text-color=\"#fff\"\r\n                active-text-color=\"#ffd04b\"\r\n                style={{ paddingLeft: 0, marginBottom: 0 }}\r\n                className=\"el-menu-demo\"\r\n            >\r\n                {renderMenuItem(routes)}\r\n            </Menu>\r\n        </Layout>\r\n    )\r\n}\r\n","C:\\Users\\hekai\\Desktop\\前端学习\\my-app\\src\\view\\citybrain\\traffic\\MobileGps\\index.jsx",["202","203","204"],"import React ,{useEffect,useState}from 'react'\r\nimport axios from '../../../../api/axios'\r\nimport { Table } from 'antd';\r\nimport {comm} from \"../../../../global/common\";\r\nexport default function MobileGps() {\r\n  const [datas,setdatas] = useState([])\r\n  const [sign, setSign] = useState(0);\r\n  const [timer, setTimer] = useState(null);\r\n  const queryDatas = () => {\r\n    axios.$get(comm.WEB_URL + '/citybrain/gpsList').then(res =>{\r\n      setdatas(res)\r\n    }\r\n  )};\r\n  useEffect(() => {\r\n    // 开始轮询\r\n    \r\n    const interval = setInterval(queryDatas, 5000); // 每秒调用一次 queryDatas\r\n    setTimer(interval);\r\n    return () => {\r\n      // 停止轮询\r\n      clearInterval(timer);\r\n    };\r\n  }, []);\r\n  const columns = [\r\n    {\r\n      title:'ID',\r\n      dataIndex:'id',\r\n      ellipsis:true\r\n    },\r\n    {\r\n      title:'时间',\r\n      dataIndex:'time',\r\n      ellipsis:true\r\n    },\r\n    {\r\n      title:'经度',\r\n      dataIndex:'lon',\r\n      ellipsis:true\r\n    },\r\n    {\r\n      title:'纬度',\r\n      dataIndex:'lat',\r\n      ellipsis:true\r\n    }\r\n  ]\r\n  return (\r\n    <Table columns={columns} dataSource={datas} />\r\n  )\r\n}\r\n","C:\\Users\\hekai\\Desktop\\前端学习\\my-app\\src\\view\\citybrain\\traffic\\Flights\\index.jsx",["205"],"import React from 'react'\r\nimport { useState, useEffect } from 'react'\r\nimport { Tag, Space, Card, Table, Pagination } from 'antd';\r\nimport { comm } from \"../../../../global/common\";\r\nimport axios from '../../../../api/axios'\r\nexport default function Flights() {\r\n  const [datas, setdatas] = useState([{id:1}])\r\n  const [queryInfo, setqueryInfo] = useState({\r\n    pageNum: 1,\r\n    pageSize: 10,\r\n    total: 20,\r\n  })\r\n  const [conditions, setconditions] = useState([])\r\n  const columns = [\r\n    {\r\n      title: 'ID',\r\n      dataIndex: 'id',\r\n      ellipsis: true\r\n    },\r\n    {\r\n      title: '经度',\r\n      dataIndex: 'lng',\r\n      ellipsis: true\r\n    },\r\n    {\r\n      title: '纬度',\r\n      dataIndex: 'lat',\r\n      ellipsis: true\r\n    },\r\n    {\r\n      title: '转换值',\r\n      dataIndex: 'conversiondata',\r\n      ellipsis: true\r\n    },\r\n    {\r\n      title: '真实值',\r\n      dataIndex: 'realdata',\r\n      ellipsis: true\r\n    },\r\n    {\r\n      title: '转换是否正确',\r\n      dataIndex: 'result',\r\n      ellipsis: true\r\n    }\r\n  ]\r\n  const queryDatas = () => {\r\n    let parmas = {\r\n      page: queryInfo.pageNum,\r\n      pageSize: queryInfo.pageSize\r\n    }\r\n    axios.$get(comm.WEB_URL + '/citybrain/gpsaddress/getGpssAddress', parmas).then(res => {\r\n      axios.$get(comm.WEB_URL + 'citybrain/gpsaddress/getCount').then(res => {\r\n        setqueryInfo(queryInfo => ({\r\n          ...queryInfo,\r\n          total: res\r\n        }))\r\n      })\r\n      setdatas(res)\r\n    }).catch(error => {\r\n      // 请求失败处理逻辑\r\n      console.error(\"error111\", error);\r\n    })\r\n  }\r\n  const getQuota = () => {\r\n    axios.$get(comm.WEB_URL + 'citybrain/gpsaddress/getQuota').then(res => {\r\n      const updataConditions = {\r\n        ...res,\r\n        error: res.sum - res.right,\r\n        conversion: (res.right * 100 / res.sum).toFixed(3),\r\n      };\r\n      setconditions(updataConditions)\r\n    }).catch(error => {\r\n      // 请求失败处理逻辑\r\n      console.error(\"error\", error);\r\n    })\r\n  }\r\n  const handleSizeChange = (val) => {\r\n    setqueryInfo(queryInfo => ({\r\n      ...queryInfo,\r\n      val: val\r\n    }))\r\n    queryDatas();\r\n  }\r\n  const handleCurrentChange = (val) => {\r\n    setqueryInfo(queryInfo => ({\r\n      ...queryInfo,\r\n      pageNum: val\r\n    }))\r\n    queryDatas();\r\n  }\r\n  useEffect(() => {\r\n    queryDatas()\r\n    getQuota()\r\n  }, [])\r\n  return (\r\n    <div>\r\n      <Card bordered={false} >\r\n        <Space size={[0, 8]} wrap>\r\n          <Tag color=\"#f50\" style={{ marginRight: '20px' }}>总数据量:{conditions.sum}</Tag>\r\n          <Tag color=\"#2db7f5\" style={{ marginRight: '20px' }}>识别正确据量:{conditions.right}</Tag>\r\n          <Tag color=\"#87d068\" style={{ marginRight: '20px' }}>识别错误数据量:{conditions.error}</Tag>\r\n          <Tag color=\"#108ee9\" style={{ marginRight: '20px' }}>数据转换率:{conditions.conversion}</Tag>\r\n        </Space>\r\n      </Card>\r\n      <Card bordered={false}>\r\n        <Table columns={columns} dataSource={datas} />\r\n      </Card>\r\n      <Pagination\r\n        showQuickJumper\r\n        defaultCurrent={queryInfo.pageNum}\r\n        total={queryInfo.total}\r\n        pageSize={queryInfo.pageSize}\r\n        onChange={handleCurrentChange}\r\n        onShowSizeChange={handleSizeChange}\r\n        pageSizeOptions={[10, 20, 50, 100,200]}\r\n        showSizeChanger=\"true\"\r\n        style={{ display: 'flex', justifyContent: 'center', marginTop: '20px' }}\r\n      />\r\n      \r\n    </div>\r\n  )\r\n}\r\n","C:\\Users\\hekai\\Desktop\\前端学习\\my-app\\src\\view\\citybrain\\traffic\\Trajectory_detection\\index.jsx",["206","207","208","209","210"],"import React from 'react'\r\nimport { useState, useEffect } from 'react'\r\nimport { useHistory } from 'react-router-dom';\r\nimport { comm } from \"../../../../global/common\";\r\nimport { Card, Tag, Space, Button, Tooltip,Pagination,Table } from 'antd'\r\nimport axios from '../../../../api/axios'\r\n\r\nimport './style.less'\r\nimport {\r\n  FundViewOutlined\r\n} from '@ant-design/icons';\r\nexport default function Trajectory_detection() {\r\n  const history = useHistory()\r\n  const [detectionMetric, setDetectionMetric] = useState({})\r\n  const [datas, setdatas] = useState([])\r\n  const columns = [\r\n    {\r\n      title: '索引',\r\n      dataIndex: 'index',\r\n      ellipsis: true\r\n    },\r\n    {\r\n      title: '轨迹点数',\r\n      dataIndex: 'complete_len',\r\n      ellipsis: true\r\n    },\r\n    {\r\n      title: '异常轨迹点数量',\r\n      dataIndex: 'true_anomaly',\r\n      ellipsis: true\r\n    },\r\n    {\r\n      title: '检测到的异常点数量',\r\n      dataIndex: 'pred_anomaly',\r\n      ellipsis: true\r\n    },\r\n    {\r\n      title: '待修复轨迹点数',\r\n      dataIndex: 'repair_len',\r\n      ellipsis: true\r\n    },\r\n    {\r\n      title: '操作',\r\n      dataIndex: 'operation',\r\n      width: 150,\r\n      render: (text, record) => {\r\n        return (\r\n          <Tooltip placement=\"top\" title={\"查看详情\"} arrow='false'>\r\n            <Button\r\n              icon={<FundViewOutlined />}\r\n              onClick={() => gotoTrajDetailData(record)}></Button>\r\n          </Tooltip>\r\n        )\r\n      }\r\n    }\r\n  ]\r\n  const [queryInfo, setqueryInfo] = useState({\r\n    pageNum: 1,\r\n    pageSize: 10,\r\n    total: 20,\r\n  })\r\n  \r\n  const gotoTrajDetailData = (val) => {\r\n    console.log(\"val\", val)\r\n    history.push({\r\n      pathname: \"/dataclean/citybrain/traffic/trajectoryDetail\",\r\n      state: { index: val.index }\r\n    })\r\n  }\r\n  const queryDatas = () => {\r\n    let parmas = {\r\n      page: queryInfo.pageNum,\r\n      pageSize: queryInfo.pageSize\r\n    }\r\n    axios.$get(comm.WEB_URL + '/citybrain/gpsaddress/getGpssAddress', parmas).then(res => {\r\n      axios.$get(comm.WEB_URL + 'citybrain/gpsaddress/getCount').then(res => {\r\n        setqueryInfo(queryInfo => ({\r\n          ...queryInfo,\r\n          total: res\r\n        }))\r\n      })\r\n      setdatas(res)\r\n    }).catch(error => {\r\n      // 请求失败处理逻辑\r\n      console.error(\"error111\", error);\r\n    })\r\n  }\r\n  const handleSizeChange = (val) => {\r\n    setqueryInfo(queryInfo => ({\r\n      ...queryInfo,\r\n      val: val\r\n    }))\r\n    queryDatas();\r\n  }\r\n  const handleCurrentChange = (val) => {\r\n    setqueryInfo(queryInfo => ({\r\n      ...queryInfo,\r\n      pageNum: val\r\n    }))\r\n    queryDatas();\r\n  }\r\n  useEffect(() => {\r\n    queryDatas()\r\n  }, [])\r\n  return (\r\n    <div className=\"trajectory-detection\">\r\n      <Card bordered={false} className=\"quota-container\">\r\n        <Space size={[0, 8]} wrap>\r\n          <Tag color=\"#f50\" style={{ marginRight: '20px' }}>检测召回率{detectionMetric.r}</Tag>\r\n          <Tag color=\"#2db7f5\" style={{ marginRight: '20px' }}>检测精确率率{detectionMetric.p}</Tag>\r\n          <Tag color=\"#87d068\" style={{ marginRight: '20px' }}>检测f1:{detectionMetric.f1}</Tag>\r\n          <Tag color=\"#108ee9\" style={{ marginRight: '20px' }}>所有异常轨迹点数量:{detectionMetric.true_anomaly}</Tag>\r\n          <Tag color=\"#f50\" style={{ marginRight: '20px' }}>检测到的轨迹异常点数量{detectionMetric.pred_anomaly}</Tag>\r\n          <Tag color=\"#2db7f5\" style={{ marginRight: '20px' }}>所有轨迹点数量{detectionMetric.length}</Tag>\r\n        </Space>\r\n      </Card>\r\n      <Card bordered={false}>\r\n        <Table columns={columns} dataSource={datas} />\r\n      </Card>\r\n      {/* <Pagination\r\n        showQuickJumper\r\n        defaultCurrent={queryInfo.pageNum}\r\n        total={queryInfo.total}\r\n        pageSize={queryInfo.pageSize}\r\n        onChange={handleCurrentChange}\r\n        onShowSizeChange={handleSizeChange}\r\n        pageSizeOptions={[10, 20, 50, 100, 200]}\r\n        showSizeChanger=\"true\"\r\n        style={{ display: 'flex', justifyContent: 'center', marginTop: '20px' }}\r\n      /> */}\r\n    </div>\r\n  )\r\n}\r\n","C:\\Users\\hekai\\Desktop\\前端学习\\my-app\\src\\view\\citybrain\\traffic\\Trajectory_interpolation\\index.jsx",["211","212","213"],"import React from 'react'\r\nimport { useState, useEffect, useMemo } from 'react'\r\nimport { Tag, Space, Card, Table, Pagination, Button, Tooltip } from 'antd';\r\nimport { comm } from \"../../../../global/common\";\r\nimport axios from '../../../../api/axios'\r\nimport { useHistory } from 'react-router-dom';\r\nimport {\r\n  FundViewOutlined\r\n} from '@ant-design/icons';\r\nexport default function Trajectory_interpolation() {\r\n  const history = useHistory();\r\n  const [datas, setdatas] = useState([{ index: 1 }])\r\n  const [queryInfo, setqueryInfo] = useState({\r\n    pageNum: 1,\r\n    pageSize: 10,\r\n    total: 20,\r\n  })\r\n  const [cleanIndex, setCleanIndex] = useState([])\r\n  const mergedArrow = useMemo(() => {\r\n    return true;\r\n  }, []);\r\n  const columns = [\r\n    {\r\n      title: '索引',\r\n      dataIndex: 'index',\r\n      ellipsis: true\r\n    },\r\n    {\r\n      title: '轨迹点数',\r\n      dataIndex: 'complete_len',\r\n      ellipsis: true\r\n    },\r\n    {\r\n      title: '纬度',\r\n      dataIndex: 'lat',\r\n      ellipsis: true\r\n    },\r\n    {\r\n      title: '已有轨迹点数',\r\n      dataIndex: 'train_len',\r\n      ellipsis: true\r\n    },\r\n    {\r\n      title: '待修复轨迹点数',\r\n      dataIndex: 'repair_len',\r\n      ellipsis: true\r\n    },\r\n    {\r\n      title: '转换是否正确',\r\n      dataIndex: 'result',\r\n      ellipsis: true\r\n    },\r\n    {\r\n      title: '操作',\r\n      dataIndex: 'operation',\r\n      width: 150,\r\n      render: (text, record) => {\r\n        return (\r\n          <Tooltip placement=\"top\" title={\"查看详情\"} arrow='false'>\r\n            <Button\r\n              icon={<FundViewOutlined />}\r\n              onClick={() => gotoTrajDetailData(record)}></Button>\r\n          </Tooltip>\r\n        )\r\n      }\r\n    }\r\n  ]\r\n  const queryDatas = () => {\r\n    let parmas = {\r\n      page: queryInfo.pageNum,\r\n      pageSize: queryInfo.pageSize\r\n    }\r\n    axios.$get(comm.WEB_URL + '/citybrain/gpsaddress/getGpssAddress', parmas).then(res => {\r\n      axios.$get(comm.WEB_URL + 'citybrain/gpsaddress/getCount').then(res => {\r\n        setqueryInfo(queryInfo => ({\r\n          ...queryInfo,\r\n          total: res\r\n        }))\r\n      })\r\n      setdatas(res)\r\n    }).catch(error => {\r\n      // 请求失败处理逻辑\r\n      console.error(\"error111\", error);\r\n    })\r\n  }\r\n  const handleSizeChange = (val) => {\r\n    setqueryInfo(queryInfo => ({\r\n      ...queryInfo,\r\n      val: val\r\n    }))\r\n    queryDatas();\r\n  }\r\n  const handleCurrentChange = (val) => {\r\n    setqueryInfo(queryInfo => ({\r\n      ...queryInfo,\r\n      pageNum: val\r\n    }))\r\n    queryDatas();\r\n  }\r\n  const gotoTrajDetailData = (val) => {\r\n    console.log(\"val\", val)\r\n    history.push({\r\n      pathname: \"/dataclean/citybrain/traffic/trajectoryDetail\",\r\n      state: { index: val.index}\r\n    })\r\n  }\r\n  useEffect(() => {\r\n    queryDatas()\r\n    \r\n  }, [])\r\n  return (\r\n    <div>\r\n      <Card bordered={false} >\r\n        <Space size={[0, 8]} wrap>\r\n          <Tag color=\"#f50\" style={{ marginRight: '20px' }}>修复成功率(修复误差小于100米):{cleanIndex.repair_rate}</Tag>\r\n          <Tag color=\"#2db7f5\" style={{ marginRight: '20px' }}>修复失败数量:{cleanIndex.error_repair_count}</Tag>\r\n          <Tag color=\"#87d068\" style={{ marginRight: '20px' }}>修复成功数量:{cleanIndex.correct_repair_count}</Tag>\r\n          <Tag color=\"#108ee9\" style={{ marginRight: '20px' }}>所有修复数量:{cleanIndex.all_repiar_count}</Tag>\r\n        </Space>\r\n      </Card>\r\n      <Card bordered={false}>\r\n        <Table columns={columns} dataSource={datas} />\r\n      </Card>\r\n      <Pagination\r\n        showQuickJumper\r\n        defaultCurrent={queryInfo.pageNum}\r\n        total={queryInfo.total}\r\n        pageSize={queryInfo.pageSize}\r\n        onChange={handleCurrentChange}\r\n        onShowSizeChange={handleSizeChange}\r\n        pageSizeOptions={[10, 20, 50, 100, 200]}\r\n        showSizeChanger=\"true\"\r\n        style={{ display: 'flex', justifyContent: 'center', marginTop: '20px' }}\r\n      />\r\n\r\n    </div>\r\n  )\r\n}\r\n\r\n\r\n","C:\\Users\\hekai\\Desktop\\前端学习\\my-app\\src\\view\\citybrain\\traffic\\LicensePlate\\index.jsx",["214","215"],"import React from 'react'\r\nimport {useState} from 'react'\r\nimport {Space,Card,Tag,Table} from 'antd'\r\nexport default function LicensePlate() {\r\n  const [conditions,setConditions] = useState({})\r\n  const columns = [\r\n    {\r\n      title: '序号',\r\n      dataIndex: 'index',\r\n      width: 80,\r\n      render: (text, record, index) => index + 1,\r\n    },\r\n    {\r\n      title: '识别车牌',\r\n      dataIndex: 'getnumber',\r\n    },\r\n    {\r\n      title: '真实车牌',\r\n      dataIndex: 'realnumber',\r\n    },\r\n    {\r\n      title: 'Y/N',\r\n      dataIndex: 'result',\r\n    },\r\n    {\r\n      title: '图片',\r\n      dataIndex: 'url',\r\n      width: 180,\r\n      render: (text, record) => (\r\n        <img src={record.url} alt=\"图片\" style={{ width: '150px', height: '50px' }} />\r\n      ),\r\n    },\r\n  ];\r\n  const [dataList,setDataList] = useState([{ name: 'dievice_0001' }, { name: 'dievice_0002' }])\r\n  return (\r\n    <div>\r\n      <Card bordered={false} >\r\n        <Space size={[0, 8]} wrap>\r\n          <Tag color=\"#f50\" style={{ marginRight: '20px' }}>总数据量:{ conditions.sum }</Tag>\r\n          <Tag color=\"#2db7f5\" style={{ marginRight: '20px' }}>识别正确据量::{conditions.right}</Tag>\r\n          <Tag color=\"#87d068\" style={{ marginRight: '20px' }}>修复成功数量:{conditions.error}</Tag>\r\n          <Tag color=\"#108ee9\" style={{ marginRight: '20px' }}>所有修复数量:{conditions.conversion}</Tag>\r\n        </Space>\r\n      </Card>\r\n      <Table\r\n      dataSource={dataList}\r\n      columns={columns}\r\n      bordered\r\n      rowKey={(record, index) => index}\r\n      pagination={true}\r\n      scroll={{ y: 880 }}\r\n      style={{ width: '100%' }}\r\n    />\r\n    </div>\r\n  )\r\n}\r\n","C:\\Users\\hekai\\Desktop\\前端学习\\my-app\\src\\view\\sensor\\ZhijiangAll\\index.jsx",[],"C:\\Users\\hekai\\Desktop\\前端学习\\my-app\\src\\view\\sensor\\Summary_index\\index.jsx",[],"C:\\Users\\hekai\\Desktop\\前端学习\\my-app\\src\\view\\camera\\Eastexitcamera\\index.jsx",["216","217","218","219"],"import React, { useEffect, useRef } from 'react';\r\nimport flvjs from 'flv.js';\r\nimport './style.css'\r\nexport default function Eastexitcamera() {\r\n  const videoRef = useRef(null);\r\n  let flvPlayer = null;\r\n\r\n  // useEffect(() => {\r\n  //   if (flvjs.isSupported()) {\r\n  //     flvPlayer = flvjs.createPlayer({\r\n  //       type: 'mp4',\r\n  //       isLive: true,\r\n  //       hasAudio: false,\r\n  //       url: require('../../../assets/video/movie.mp4'),\r\n  //       // url: \"http://10.11.24.154:8002/flv?port=1935&app=myapp&stream=test2\"\r\n  //       // url:streamUrl('colour-label')\r\n  //       // url:'http://10.11.24.56:8002/live?port=1935&app=myapp&stream=test2'\r\n  //       // url: \"http://172.20.10.6:8080/live?port=1935&app=myapp&stream=mystream\"\r\n  //     });\r\n\r\n  //     flvPlayer.attachMediaElement(videoRef.current);\r\n  //     flvPlayer.current.load();\r\n  //     flvPlayer.current.play();\r\n  //   }\r\n\r\n  //   return () => {\r\n  //     if (flvPlayer.current) {\r\n  //       flvPlayer.current.destroy();\r\n  //     }\r\n  //   };\r\n  // }, []);\r\n\r\n  const play = () => {\r\n    if (flvPlayer) {\r\n      flvPlayer.play();\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <div className=\"row\">\r\n        <h4 style={{ textAlign: 'center' }}>监控视频</h4>\r\n        <video src={require('../../../assets/video/movie.mp4').default} controls autoPlay muted width=\"1200\" height=\"800\"></video>\r\n        {/* <video ref={videoRef} controls autoPlay muted width=\"1200\" height=\"800\" /> */}\r\n        {/* <button onClick={play}>播放</button> */}\r\n      </div>\r\n    </div>\r\n  );\r\n}","C:\\Users\\hekai\\Desktop\\前端学习\\my-app\\src\\view\\camera\\northcamera\\index.jsx",[],"C:\\Users\\hekai\\Desktop\\前端学习\\my-app\\src\\view\\camera\\Northcamera\\index.jsx",["220","221","222","223"],"import React, { useEffect, useRef } from 'react';\r\nimport flvjs from 'flv.js';\r\nimport './style.css'\r\nexport default function NorthCamera() {\r\n  const videoRef = useRef(null);\r\n  let flvPlayer = null;\r\n\r\n  // useEffect(() => {\r\n  //   if (flvjs.isSupported()) {\r\n  //     flvPlayer = flvjs.createPlayer({\r\n  //       type: 'mp4',\r\n  //       isLive: true,\r\n  //       hasAudio: false,\r\n  //       url: require('../../../assets/video/movie.mp4'),\r\n  //       // url: \"http://10.11.24.154:8002/flv?port=1935&app=myapp&stream=test2\"\r\n  //       // url:streamUrl('colour-label')\r\n  //       // url:'http://10.11.24.56:8002/live?port=1935&app=myapp&stream=test2'\r\n  //       // url: \"http://172.20.10.6:8080/live?port=1935&app=myapp&stream=mystream\"\r\n  //     });\r\n\r\n  //     flvPlayer.attachMediaElement(videoRef.current);\r\n  //     flvPlayer.current.load();\r\n  //     flvPlayer.current.play();\r\n  //   }\r\n\r\n  //   return () => {\r\n  //     if (flvPlayer.current) {\r\n  //       flvPlayer.current.destroy();\r\n  //     }\r\n  //   };\r\n  // }, []);\r\n\r\n  const play = () => {\r\n    if (flvPlayer) {\r\n      flvPlayer.play();\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <div className=\"row\">\r\n        <h4 style={{ textAlign: 'center' }}>监控视频</h4>\r\n        <video src={require('../../../assets/video/movie.mp4').default} controls autoPlay muted width=\"1200\" height=\"800\"></video>\r\n        {/* <video ref={videoRef} controls autoPlay muted width=\"1200\" height=\"800\" /> */}\r\n        {/* <button onClick={play}>播放</button> */}\r\n      </div>\r\n    </div>\r\n  );\r\n}","C:\\Users\\hekai\\Desktop\\前端学习\\my-app\\src\\view\\rule\\Rule\\index.jsx",["224","225","226","227","228","229","230","231","232","233","234","235","236","237","238","239"],"import React from 'react'\r\nimport { useEffect, useState } from 'react'\r\nimport { comm } from '../../../global/common'\r\nimport { Button, Tag, Card, Table, Space, Popconfirm ,Pagination,Modal} from 'antd'\r\nimport { setLocalStorage, getLocalStorage } from '../../../Mixin/LocalStorageMixin/LocalStorageMixin'\r\nimport { searchByRule } from '../../../Mixin/SearchMixin/SearchMixin'\r\nimport { flattenObject } from '../../../utils/tool'\r\nimport { omit } from 'lodash'\r\nimport axios from '../../../api/axios'\r\nimport AddRuleDialog from '../../../components/rule/AddRuleDialog'\r\nexport default function Rule() {\r\n  const [tableName, setTableName] = useState('cross_road_car')\r\n  //对queryinfo进行监视\r\n  const [queryInfo, setQueryInfo] = useState({\r\n    page: 1,\r\n    pageSize: 20,\r\n    total: 0,\r\n  })\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      try {\r\n        const { content, totalElements } = await fetchTableData();\r\n        setTableData(content);\r\n        setQueryInfo((prevQueryInfo) => ({\r\n          ...prevQueryInfo,\r\n          total: totalElements,\r\n        }));\r\n        search();\r\n      } catch (error) {\r\n        console.error(error);\r\n        // 处理错误的逻辑\r\n      }\r\n    };\r\n    fetchData();\r\n  }, [queryInfo])\r\n  const [tableData, setTableData] = useState([])\r\n  const [isAddRuleDialogShow, setIsAddRuleDialogShow] = useState(false)\r\n  //rule的监视\r\n  const [rule, setRule] = useState([])\r\n  useEffect(() => {\r\n    search();\r\n    saveRules();\r\n  }, [rule])\r\n  const [editingRuleIndex, setEditingRuleIndex] = useState(null)\r\n  const [isEditRuleDialogShowleData, setIsEditRuleDialogShow] = useState(false)\r\n  const [matchedList, setMatchedList] = useState([])\r\n  const [supportedRule, setSupportedRule] = useState({})\r\n  const [supportedFields, setSupportedFields] = useState([])\r\n  const [fieldMap, setFieldMap] = useState({\r\n    cross_road_car: {\r\n      ssid: '卡口编号',\r\n      cdbh: '车道编号',\r\n      fx: '方向',\r\n    },\r\n  })\r\n  //tableNames的动态绑定\r\n  const [tableNames, setTableNames] = useState([])\r\n  useEffect(() => {\r\n    setTableNames(Object.keys(fieldMap))\r\n  }, [fieldMap])\r\n  //fields的动态绑定\r\n  const [fields, setFields] = useState([])\r\n  useEffect(() => {\r\n    setFields(getFields(tableName))\r\n  }, [tableNames])\r\n\r\n  //ruleForRequest的动态绑定\r\n  const [ruleForRequest, setRuleForRequest] = useState([])\r\n  useEffect(() => {\r\n    setRuleForRequest(rule.map((r) =>\r\n      Object.assign(flattenObject(omit(r, ['isDirtyData'])), {\r\n        label: !r.isDirtyData,\r\n        tableName: tableName,\r\n      })\r\n    ))\r\n  }, [rule])\r\n  const getFields = (tableName) => {\r\n    if (!tableNames.includes(tableName)) return []\r\n    return Object.keys(fieldMap[tableName])\r\n  }\r\n  const getFieldZh=(tableName, field)=>{\r\n    if (!(tableName in fieldMap)) return\r\n    const tableFields = fieldMap[tableName]\r\n    if (!(field in tableFields)) return\r\n    return tableFields[field]\r\n  }\r\n  const saveRules = () => {\r\n    setLocalStorage('dataclean__rule', rule)\r\n  }\r\n  const search = async () => {\r\n    try {\r\n      const matchedList_test = await searchByRule(\r\n        comm.WEB_URL + '/crossroad/target_id/3.0',\r\n        queryInfo,\r\n        ruleForRequest,\r\n        supportedFields\r\n      );\r\n      setMatchedList(matchedList_test)\r\n    } catch (error) {\r\n      console.error(error);\r\n      // setState({ error: error.message });\r\n      setMatchedList([])\r\n    }\r\n  };\r\n  const fetchTableData = async () => {\r\n    const { content, totalElements } = await axios.$get(\r\n      comm.WEB_URL + 'crossroad/list',\r\n      {\r\n        page: queryInfo.page,\r\n        pageSize: queryInfo.pageSize,\r\n      }\r\n    )\r\n    return { content, totalElements }\r\n  }\r\n  const setAddModalOpen = ()=>{\r\n    setIsAddRuleDialogShow(true)\r\n  }\r\n  const setAddModalClose = ()=>{\r\n    setIsAddRuleDialogShow(false)\r\n  }\r\n  const handleAddRuleClick=(ruleForDialog) =>{\r\n    const newrule = rule.push(ruleForDialog)\r\n    setRule(newrule)\r\n    setIsAddRuleDialogShow(false)\r\n  }\r\n  const columns = [\r\n    {\r\n      title: 'id',\r\n      dataIndex: 'id',\r\n    },\r\n    ...fields.map((field, idx) => {\r\n      return ({\r\n        title: getFieldZh(tableName, field),\r\n        dataIndex: field,\r\n        key: idx\r\n      })\r\n    })\r\n  ];\r\n  return (\r\n    <div>\r\n      <Card bordered={false} >\r\n        <Space size={[0, 8]} wrap>\r\n          <Button type=\"primary\" style={{ marginRight: '20px' }} onClick={setAddModalOpen}>添加规则</Button>\r\n          <Popconfirm\r\n            placement=\"top\"\r\n            title={\"确定要清空规则列表吗？\"}\r\n            description={123}\r\n            okText=\"Yes\"\r\n            cancelText=\"no\"\r\n            onConfirm={() => {\r\n              rule = []\r\n            }}\r\n          >\r\n            <Button type=\"primary\" danger>\r\n              清空规则\r\n            </Button>\r\n          </Popconfirm>\r\n        </Space>\r\n      </Card>\r\n      <Card bordered={false} >\r\n        <Table\r\n          dataSource={tableData}\r\n          columns={columns}\r\n          rowKey=\"id\"\r\n        />\r\n        <Pagination\r\n        showQuickJumper\r\n        defaultCurrent={queryInfo.pageNum}\r\n        total={queryInfo.total}\r\n        pageSize={queryInfo.pageSize}\r\n        pageSizeOptions={[10, 20, 50, 100,200]}\r\n        showSizeChanger=\"true\"\r\n        style={{ display: 'flex', justifyContent: 'center', marginTop: '20px' }}\r\n      />\r\n      </Card>\r\n      <AddRuleDialog \r\n      tableName={tableName} \r\n      isAddRuleDialogShow={isAddRuleDialogShow}\r\n      fields = {supportedFields} \r\n      setAddModalClose={setAddModalClose}\r\n      supportedRules={supportedRule}\r\n      rule={rule[editingRuleIndex]}\r\n      handleAddRuleClick={handleAddRuleClick}\r\n      getFieldZh={getFieldZh}\r\n      ></AddRuleDialog>\r\n    </div>\r\n  )\r\n}\r\n","C:\\Users\\hekai\\Desktop\\前端学习\\my-app\\src\\view\\rule\\Rule3\\index.jsx",["240","241","242","243","244","245","246","247","248","249","250","251","252","253","254","255","256","257","258","259","260","261","262","263","264","265","266","267","268","269","270"],"import React from 'react'\r\nimport { useState, useEffect } from 'react'\r\nimport { Card, Button, Modal, Form, Tag, Checkbox, Input, Table, Pagination } from 'antd'\r\nimport { comm } from '../../../global/common'\r\nimport axios from '../../../api/axios'\r\nexport default function Rule3() {\r\n  const [form1] = Form.useForm();\r\n  const [dialogTableVisible, setDialogTableVisible] = useState(false)\r\n  const [radio, setRadio] = useState('1')\r\n  const [form, setForm] = useState([])\r\n  const [count, setCount] = useState(0)\r\n  const [numb, setNumb] = useState([])\r\n  const [nnn, setNnn] = useState([])\r\n  const [visible, setVisible] = useState(false)\r\n  const [showinput1, setShowinput1] = useState(true)\r\n  const [showinput2, setShowinput2] = useState(true)\r\n  const [showinput3, setShowinput3] = useState(true)\r\n  const [check1, setCheck1] = useState(false)\r\n  const [check2, setCheck2] = useState(false)\r\n  const [check3, setCheck3] = useState(false)\r\n  const [buttonshow, setButtonshow] = useState(false)\r\n  const [formla, setFormla] = useState([])\r\n  const [formLabelAlign, setFormLabelAlign] = useState({\r\n    id: '',\r\n    ssid: '',\r\n    cdbh: '',\r\n    fx: '',\r\n    index: 0\r\n  })\r\n  const [gridData, setGridData] = useState([])\r\n  const [tableData, setTableData] = useState([])\r\n  const [queryInfo, setQueryInfo] = useState({\r\n    page: 1,\r\n    pageSize: 10,\r\n    total: 0,\r\n  })\r\n  const columns = [\r\n    {\r\n      title: 'id',\r\n      dataIndex: 'id',\r\n      align: 'center'\r\n    },\r\n    {\r\n      title: '卡口编号',\r\n      dataIndex: 'ssid',\r\n      align: 'center'\r\n    },\r\n    {\r\n      title: '车道编号',\r\n      dataIndex: 'cdbh',\r\n      align: 'center'\r\n    },\r\n    {\r\n      title: '方向',\r\n      dataIndex: 'fx',\r\n      align: 'center'\r\n    },\r\n  ]\r\n\r\n  const initRaha = () => {\r\n    axios.$get(comm.CLEAN_URL + '/initRaha').then(res => {\r\n      console.log('初始化引擎')\r\n      setCount(0)\r\n      console.log(res)\r\n      if (res.code == 0) {\r\n        setButtonshow(true)\r\n      }\r\n    })\r\n  }\r\n  const showlabelalign = () => {\r\n    axios.$get(comm.CLEAN_URL + '/sample').then(res => {\r\n      if (res.code == 0) {\r\n        setDialogTableVisible(true)\r\n        console.log(res.data)\r\n        console.log('data_id ' + res.data.id)\r\n        let newformLabelAlign;\r\n        newformLabelAlign = JSON.parse(JSON.stringify(formLabelAlign))\r\n        newformLabelAlign.id = res.data.id\r\n        newformLabelAlign.ssid = res.data.ssid\r\n        newformLabelAlign.cdbh = res.data.cdbh\r\n        newformLabelAlign.fx = res.data.fx\r\n        newformLabelAlign.index = res.data.index\r\n        setFormLabelAlign((prevalue) => (newformLabelAlign))\r\n      }\r\n      else if (res.code == 412) {\r\n        open1()\r\n      }\r\n      else {\r\n        open2()\r\n      }\r\n    })\r\n  }\r\n  const open1 = () => {\r\n    setDialogTableVisible(false)\r\n    setButtonshow(false)\r\n  }\r\n  const open2 = () => {\r\n    setDialogTableVisible(false)\r\n    setButtonshow(false)\r\n  }\r\n  const handleInput1Change = (e) => {\r\n    setShowinput1(e.target.checked)\r\n  }\r\n  const handleInput2Change = (e) => {\r\n    setShowinput2(e.target.checked)\r\n  }\r\n  const handleInput3Change = (e) => {\r\n    setShowinput3(e.target.checked)\r\n  }\r\n  const totalonClick = () => {\r\n    closedialog()\r\n  }\r\n  const closedialog = () => {\r\n    if (count == 9) {\r\n      dialogTableVisible = false\r\n      buttonshow = false\r\n    }\r\n  }\r\n  const getTableData = () => {\r\n    axios.$get(comm.CLEAN_URL + 'selectByPage',\r\n      {\r\n        page: queryInfo.page,\r\n        pageSize: queryInfo.pageSize,\r\n      }).then(res => {\r\n        console.log(res)\r\n        setTableData(res.data.tableData)\r\n        setQueryInfo((prevalue)=>({\r\n          ...prevalue,\r\n          total:res.data.total\r\n        }))\r\n      })\r\n  }\r\n  const handleSizeChange = (newPageSize) => {\r\n    setQueryInfo(queryInfo => ({\r\n      ...queryInfo,\r\n      pageSize: newPageSize\r\n    }))\r\n    getTableData()\r\n    changecolor()\r\n  }\r\n  const handleCurrentChange = (currentPage) => {\r\n    setQueryInfo(queryInfo => ({\r\n      ...queryInfo,\r\n      page: currentPage\r\n    }))\r\n    getTableData()\r\n    changecolor()\r\n  }\r\n  const changecolor = () => {\r\n    numb.splice(0, numb.length)\r\n    let i = queryInfo.pageSize / 10\r\n    for (let t = 0; t < i; t++) {\r\n      for (const p in nnn[queryInfo.page * i - i + t])\r\n        numb.push(nnn[queryInfo.page * i - i + t][p])\r\n    }\r\n  }\r\n  const changelabelalign = () => {\r\n    check1 = false\r\n    check2 = false\r\n    check3 = false\r\n    showinput1 = true\r\n    showinput2 = true\r\n    showinput3 = true\r\n    setFormla(JSON.parse(JSON.stringify(formLabelAlign)))\r\n    axios.$post(comm.CLEAN_URL + '/labelByUser', formla).then(res => {\r\n      if (res.code == 0) {\r\n        console.log(res.data)\r\n        console.log('labeled ' + res.data.labeled)\r\n        setCount(res.data.labeled)\r\n        setNnn(res.data.labels)\r\n        // this.$nextTick(function () {\r\n        //   if (count < 10) {\r\n        //     this.showlabelalign()\r\n        //   }\r\n        //   if (this.nnn.length != 0) {\r\n        //     this.changecolor()\r\n        //   }\r\n        // })\r\n        Promise.resolve().then(() => {\r\n          // 在下一个事件循环周期执行的代码\r\n          if (count < 10) {\r\n            showlabelalign()\r\n          }\r\n          if (nnn.length != 0) {\r\n            changecolor()\r\n          }\r\n        });\r\n      }\r\n      else if (res.code == 412) {\r\n        this.open1()\r\n      }\r\n      else {\r\n        this.open2()\r\n      }\r\n    })\r\n  }\r\n  useEffect(()=>{\r\n    getTableData()\r\n  },[])\r\n  return (\r\n    <div>\r\n      <Card>\r\n        <Button type=\"primary\" onClick={initRaha}>初始化引擎</Button>\r\n        {\r\n          buttonshow && <Button type=\"primary\" onClick={showlabelalign} ></Button>\r\n        }\r\n        <Modal\r\n          open={dialogTableVisible}\r\n          style={{ textAlign: 'center' }}\r\n          className='data-dialog'\r\n        >\r\n          <div>\r\n            <Tag style={{ marginBottom: '12px' }}>第{count + 1 <= 10 ? count + 1 : 10}条采样 (共 10 条)：请将数据错误标记出来，并修改</Tag>\r\n          </div>\r\n          <Form\r\n            form={form1}\r\n            labelCol={{ span: 8 }}\r\n            wrapperCol={{ span: 16 }}\r\n          >\r\n            <Form.Item label=\"卡口编号\">\r\n              <Checkbox onChange={handleInput1Change} checked={check1}>卡口编号</Checkbox>\r\n              <Form.Item noStyle shouldUpdate>\r\n                {() => (\r\n                  <Input\r\n                    disabled={!showinput1}\r\n                    value={formLabelAlign.ssid}\r\n                    onChange={(e) => setFormLabelAlign({ ...formLabelAlign, ssid: e.target.value })}\r\n                  />\r\n                )}\r\n              </Form.Item>\r\n            </Form.Item>\r\n\r\n            <Form.Item label=\"车道编号\">\r\n              <Checkbox onChange={handleInput2Change}>车道编号</Checkbox>\r\n              <Form.Item noStyle shouldUpdate>\r\n                {() => (\r\n                  <Input\r\n                    disabled={!showinput2}\r\n                    value={formLabelAlign.cdbh}\r\n                    onChange={(e) => setFormLabelAlign({ ...formLabelAlign, cdbh: e.target.value })}\r\n                  />\r\n                )}\r\n              </Form.Item>\r\n            </Form.Item>\r\n\r\n            <Form.Item label=\"方向\">\r\n              <Checkbox onChange={handleInput3Change}>方向</Checkbox>\r\n              <Form.Item noStyle shouldUpdate>\r\n                {() => (\r\n                  <Input\r\n                    disabled={!showinput3}\r\n                    value={formLabelAlign.fx}\r\n                    onChange={(e) => setFormLabelAlign({ ...formLabelAlign, fx: e.target.value })}\r\n                  />\r\n                )}\r\n              </Form.Item>\r\n            </Form.Item>\r\n\r\n            <Form.Item wrapperCol={{ offset: 8, span: 16 }}>\r\n              <Button type=\"primary\" htmlType=\"submit\" onClick={totalonClick}>\r\n                提交修改\r\n              </Button>\r\n            </Form.Item>\r\n          </Form>\r\n        </Modal>\r\n      </Card>\r\n      <Card style={{ textAlign: 'center' }}>\r\n        <h1>Dataset</h1>\r\n        <Table columns={columns} dataSource={tableData}></Table>\r\n        <Pagination\r\n          showQuickJumper\r\n          defaultCurrent={queryInfo.pageNum}\r\n          total={queryInfo.total}\r\n          pageSize={queryInfo.pageSize}\r\n          onChange={handleCurrentChange}\r\n          onShowSizeChange={handleSizeChange}\r\n          pageSizeOptions={[10, 20, 50, 100, 200]}\r\n          showSizeChanger=\"true\"\r\n          style={{ display: 'flex', justifyContent: 'center', marginTop: '20px' }}\r\n        />\r\n      </Card>\r\n    </div>\r\n  )\r\n}\r\n","C:\\Users\\hekai\\Desktop\\前端学习\\my-app\\src\\view\\colorCast\\ColorCast\\index.jsx",["271","272","273","274","275","276","277","278","279","280","281","282","283"],"import React from 'react'\r\nimport { useState } from 'react'\r\nimport axios from '../../../api/axios'\r\nimport './style.less'\r\nimport { comm } from \"../../../global/common\";\r\nimport { Card, Button, Span, Table, Pagination } from 'antd'\r\nexport default function ColorCast() {\r\n  const [isShow, setIsShow] = useState(false)\r\n  const [showViewer, setShowViewer] = useState(false)\r\n  const [srcList, setSrcList] = useState([])\r\n  const [rate, setRate] = useState(0)\r\n  const [canPlay, setCanPlay] = useState(false)\r\n  const [play, setPlay] = useState(true)\r\n  const [dialogVisible, setDialogVisible] = useState(false)\r\n  const [index, setIndex] = useState(1)\r\n  const [tableData, setTableData] = useState([])\r\n  const [queryInfo, setQueryInfo] = useState({\r\n    page: 1,\r\n    pageSize: 10,\r\n    total: 0,\r\n  })\r\n\r\n  const startColorCast = () => {\r\n    axios.$post(comm.WEB_URL + 'colorCast/python').then(res => {\r\n      //console.log(res)\r\n      setIsShow(false)\r\n    })\r\n  }\r\n  const ffmpeg = () => {\r\n    axios.$post(comm.WEB_URL + 'colorCast/encode').then(res => {\r\n      setCanPlay(res.data.canPlay)\r\n    })\r\n  }\r\n  const getRate = () => {\r\n    axios.$get(comm.WEB_URL + 'colorCast/getRate').then(res => {\r\n      // console.log(res)\r\n      setRate(res.data.correct_rate)\r\n      setIsShow(true)\r\n      query()\r\n    })\r\n  }\r\n  const query = async () => {\r\n    const { content, totalElements } = await fetchTableData()\r\n    setTableData(content)\r\n    setQueryInfo((prevalue) => ({\r\n      ...prevalue,\r\n      total: totalElements\r\n    }))\r\n  }\r\n  const fetchTableData = async () => {\r\n    const { content, totalElements } = await axios.$get(\r\n      comm.WEB_URL + 'colorCast/getColorCast',\r\n      {\r\n        page: queryInfo.page,\r\n        pageSize: queryInfo.pageSize,\r\n      }\r\n    )\r\n    return { content, totalElements }\r\n  }\r\n  const getRows = (record) => {\r\n\r\n    // console.log(row.id)\r\n    index = record.id\r\n    //this.$refs.previewImg.showViewer = true;\r\n    //console.log(this.$refs.previewImg.showViewer)\r\n    if (srcList == undefined) {\r\n      return srcList.push(require(`../../../assets/cast_detect/${record.id}.jpg`))\r\n    } else {\r\n      return srcList.splice(0, 1, require(`../../../assets/cast_detect/${record.id}.jpg`))\r\n    }\r\n  }\r\n  const onPreview=()=>{\r\n    setShowViewer(true)\r\n  }\r\n  const handleSizeChange = (newPageSize) => {\r\n    setQueryInfo(queryInfo => ({\r\n      ...queryInfo,\r\n      pageSize: newPageSize\r\n    }))\r\n    query();\r\n  }\r\n  const handleCurrentChange = (currentPage) => {\r\n    setQueryInfo(queryInfo => ({\r\n      ...queryInfo,\r\n      page: currentPage\r\n    }))\r\n    query();\r\n  }\r\n  \r\n  const columns = [\r\n    {\r\n      title: '帧号',\r\n      dataIndex: 'id',\r\n      align: 'center'\r\n    },\r\n    {\r\n      title: 'a_factor',\r\n      dataIndex: 'afactor',\r\n      align: 'center'\r\n    }, {\r\n      title: 'b_factor',\r\n      dataIndex: 'bfactor',\r\n      align: 'center'\r\n    }, {\r\n      title: '偏色度',\r\n      dataIndex: 'castDegree',\r\n      align: 'center'\r\n    }, {\r\n      title: '实际偏色',\r\n      dataIndex: 'realCast',\r\n      align: 'center',\r\n      // Cell:({ value }) => (\r\n      //   <span>{value ? '是' : '否'}</span>\r\n      // )\r\n      render: (text, record) => {\r\n        return (\r\n          <span>{record.realCast ? \"是\" : \"否\"}</span>\r\n        )\r\n      }\r\n    },\r\n    {\r\n      title: '评判结果',\r\n      dataIndex: 'checkResult',\r\n      align: 'center',\r\n      // Cell:({ value }) => (\r\n      //   <span>{value ? '是' : '否'}</span>\r\n      // )\r\n      render: (text, record) => {\r\n        return (\r\n          <span>{record.checkResult ? \"是\" : \"否\"}</span>\r\n        )\r\n      }\r\n    },\r\n    {\r\n      title: '是否正确',\r\n      dataIndex: 'correctFlag',\r\n      align: 'center',\r\n      // Cell:({ value }) => (\r\n      //   <span>{value ? '是' : '否'}</span>\r\n      // )\r\n      render: (text, record) => {\r\n        return (\r\n          <span>{record.correctFlag ? \"是\" : \"否\"}</span>\r\n        )\r\n      }\r\n    },\r\n    {\r\n      title: '帧图',\r\n      align: 'center',\r\n      fixed: \"right\",\r\n      // Cell:({ value }) => (\r\n      //   <span>{value ? '是' : '否'}</span>\r\n      // )\r\n      render: (text, record) => {\r\n        return (\r\n          <Button type='primary'\r\n            onClick={(event) => {\r\n              event.preventDefault();\r\n              getRows(record);\r\n              onPreview();\r\n            }}\r\n            查看\r\n          ></Button>\r\n        )\r\n      }\r\n    }\r\n  ]\r\n  return (\r\n    <div>\r\n      <Card>\r\n        <Button type=\"primary\" onClick={startColorCast}>偏色检测</Button>\r\n        <Button type=\"primary\" onClick={ffmpeg}>偏色视频播放</Button>\r\n        <Button type=\"primary\" onClick={getRate}>查询检测率</Button>\r\n        {\r\n          isShow === true && <span style={{ marginLeft: \"10px\" }}>检测成功率</span>\r\n        }\r\n      </Card>\r\n      <Card style={{ marginTop: '20px' }}>\r\n        <div className='row'>\r\n          <div className='col1'>\r\n            <h4 style={{ textAlign: 'center' }}>偏色视频</h4>\r\n            <video id=\"videoElement\" src={require('../../../assets/video/movie.mp4').default} controls autoPlay muted width=\"700\" height=\"500\"></video>\r\n          </div>\r\n          <div className='col2'>\r\n            <h4 style={{ textAlign: 'center', paddingLeft: '5vw' }}>偏色检测视频</h4>\r\n            <video id=\"videoElement2\" src={require('../../../assets/video/movie.mp4').default} controls autoPlay muted width=\"700\" height=\"500\"></video>\r\n          </div>\r\n        </div>\r\n\r\n      </Card>\r\n      {\r\n        isShow === true && <Card style={{ marginLeft: '20px' }}>\r\n          <Table columns={columns} dataSource={tableData} style={{ width: '100%' }}></Table>\r\n        </Card>\r\n      }\r\n      <Pagination\r\n        showQuickJumper\r\n        defaultCurrent={queryInfo.pageNum}\r\n        total={queryInfo.total}\r\n        pageSize={queryInfo.pageSize}\r\n        onChange={handleCurrentChange}\r\n        onShowSizeChange={handleSizeChange}\r\n        pageSizeOptions={[10, 20, 50, 100, 200]}\r\n        showSizeChanger=\"true\"\r\n        style={{ display: 'flex', justifyContent: 'center', marginTop: '20px' }}\r\n      />\r\n    </div>\r\n  )\r\n}\r\n","C:\\Users\\hekai\\Desktop\\前端学习\\my-app\\src\\view\\weibo\\Weibo\\index.jsx",["284","285","286","287","288","289","290","291","292"],"C:\\Users\\hekai\\Desktop\\前端学习\\my-app\\src\\api\\axios.js",[],"C:\\Users\\hekai\\Desktop\\前端学习\\my-app\\src\\global\\common.js",[],"C:\\Users\\hekai\\Desktop\\前端学习\\my-app\\src\\view\\citybrain\\traffic\\TrajectoryDetail\\index.jsx",["293","294","295","296"],"import React from 'react'\r\nimport { useState, useEffect, useMemo } from 'react'\r\nimport { useLocation } from 'react-router-dom';\r\nimport {Table,Card} from 'antd'\r\nimport Map from '../../../map/Map'\r\nimport './style.css'\r\nimport Map_test from '../../../map/Map_test'\r\nexport default function TrajectoryDetail() {\r\n  const location = useLocation();\r\n  console.log('location',location)\r\n  const [data, setData] = useState([{\r\n    time:\"Thu, 23 Oct 2008 02:53:04 GMT\",\r\n    true_lat:\"39.984501\",\r\n    true_lng:\"116.314907\",\r\n    pred_lat:\"39.984534879241856\",\r\n    pred_lng:\"116.31493742764326\",\r\n    error:\"5\",\r\n},{\r\n    time:\"Thu, 23 Oct 2008 02:53:04 GMT\",\r\n    true_lat:\"39.984501\",\r\n    true_lng:\"116.314907\",\r\n    pred_lat:\"39.984534879241856\",\r\n    pred_lng:\"116.31493742764326\",\r\n    error:\"5\",\r\n},{\r\n    time:\"Thu, 23 Oct 2008 02:53:04 GMT\",\r\n    true_lat:\"39.984501\",\r\n    true_lng:\"116.314907\",\r\n    pred_lat:\"39.984534879241856\",\r\n    pred_lng:\"116.31493742764326\",\r\n    error:\"5\",\r\n},{\r\n    time:\"Thu, 23 Oct 2008 02:53:04 GMT\",\r\n    true_lat:\"39.984501\",\r\n    true_lng:\"116.314907\",\r\n    pred_lat:\"39.984534879241856\",\r\n    pred_lng:\"116.31493742764326\",\r\n    error:\"5\",\r\n},{\r\n    time:\"Thu, 23 Oct 2008 02:53:04 GMT\",\r\n    true_lat:\"39.984501\",\r\n    true_lng:\"116.314907\",\r\n    pred_lat:\"39.984534879241856\",\r\n    pred_lng:\"116.31493742764326\",\r\n    error:\"5\",\r\n}])\r\n  const columns = [\r\n    {\r\n      title: '时间',\r\n      dataIndex: 'time',\r\n      ellipsis: true\r\n    },\r\n    {\r\n      title: '真实纬度',\r\n      dataIndex: 'true_lat',\r\n      ellipsis: true\r\n    },\r\n    {\r\n      title: '真实经度',\r\n      dataIndex: 'true_lng',\r\n      ellipsis: true\r\n    },\r\n    {\r\n      title: '修复纬度',\r\n      dataIndex: 'pred_lat',\r\n      ellipsis: true\r\n    },\r\n    {\r\n      title: '修复经度',\r\n      dataIndex: 'pred_lng',\r\n      ellipsis: true\r\n    },\r\n    {\r\n      title: '误差(米)',\r\n      dataIndex: 'error',\r\n      ellipsis: true\r\n    }\r\n  ]\r\n  return (\r\n    <div className=\"map-container\">\r\n      <Map style={{ width: '100%' }}></Map>\r\n      <Card className=\"texttable\" body-style={{ padding: '0px' }} style={{width: '600px'}}>\r\n        <Table \r\n        columns={columns} \r\n        dataSource={data}\r\n        pagination={false}\r\n        sticky\r\n        ></Table>\r\n      </Card>\r\n    </div>\r\n  )\r\n}\r\n","C:\\Users\\hekai\\Desktop\\前端学习\\my-app\\src\\view\\map\\Map\\index.jsx",[],"C:\\Users\\hekai\\Desktop\\前端学习\\my-app\\src\\plugins\\leaflet\\leaflet.js",["297"],"import L from 'leaflet'\r\nimport 'leaflet/dist/leaflet.css'\r\nimport Map from './map'\r\n//为了支持百度地图的坐标系，代码检查了Leaflet的Proj插件是否可用，如果可用，则定义了一个名为L.CRS.Baidu的坐标参考系统。\r\n//这里其实没用\r\nif (L.Proj) {\r\n  L.CRS.Baidu = new L.Proj.CRS('EPSG:900913', '+proj=merc +a=6378206 +b=6356584.314245179 +lat_ts=0.0 +lon_0=0.0 +x_0=0 +y_0=0 +k=1.0 +units=m +nadgrids=@null +wktext  +no_defs', {\r\n    resolutions: function () {\r\n      var level = 19\r\n      var res = [];\r\n      res[0] = Math.pow(2, 18);\r\n      for (var i = 1; i < level; i++) {\r\n        res[i] = Math.pow(2, (18 - i))\r\n      }\r\n\r\n      return res;\r\n    }(),\r\n    origin: [0, 0],\r\n    bounds: L.bounds([20037508.342789244, 0], [0, 20037508.342789244])\r\n  });\r\n}\r\n//这里其实是为了调用高德的接口然后将地图渲染到页面上。是为了前面的map\r\nL.TileLayer.ChinaProvider = L.TileLayer.extend({\r\n  initialize: function (type, options) { // (type, Object)\r\n    console.log(\"type\", type, options)\r\n    var providers = L.TileLayer.ChinaProvider.providers;\r\n    options = options || {}\r\n    var parts = type.split('.');\r\n    var providerName = parts[0];\r\n    var mapName = parts[1];\r\n    var mapType = parts[2];\r\n    var url = providers[providerName][mapName][mapType];\r\n    options.subdomains = providers[providerName].Subdomains;\r\n    options.key = options.key || providers[providerName].key;\r\n    console.log(url, options)\r\n    if ('tms' in providers[providerName]) {\r\n      options.tms = providers[providerName]['tms']\r\n    }\r\n    L.TileLayer.prototype.initialize.call(this, url, options);\r\n  }\r\n});\r\n//这里相当于提供不同服务商的图册\r\nL.TileLayer.ChinaProvider.providers = {\r\n  TianDiTu: {\r\n    Normal: {\r\n      Map: \"//t{s}.tianditu.gov.cn/DataServer?T=vec_w&X={x}&Y={y}&L={z}&tk={key}\",\r\n      Annotion: \"//t{s}.tianditu.gov.cn/DataServer?T=cva_w&X={x}&Y={y}&L={z}&tk={key}\"\r\n    },\r\n    Satellite: {\r\n      Map: \"//t{s}.tianditu.gov.cn/DataServer?T=img_w&X={x}&Y={y}&L={z}&tk={key}\",\r\n      Annotion: \"//t{s}.tianditu.gov.cn/DataServer?T=cia_w&X={x}&Y={y}&L={z}&tk={key}\"\r\n    },\r\n    Terrain: {\r\n      Map: \"//t{s}.tianditu.gov.cn/DataServer?T=ter_w&X={x}&Y={y}&L={z}&tk={key}\",\r\n      Annotion: \"//t{s}.tianditu.gov.cn/DataServer?T=cta_w&X={x}&Y={y}&L={z}&tk={key}\"\r\n    },\r\n    Subdomains: ['0', '1', '2', '3', '4', '5', '6', '7'],\r\n    key: \"174705aebfe31b79b3587279e211cb9a\"\r\n  },\r\n\r\n  GaoDe: {\r\n    Normal: {\r\n      Map: '//webrd0{s}.is.autonavi.com/appmaptile?lang=zh_cn&size=1&scale=1&style=8&x={x}&y={y}&z={z}'\r\n    },\r\n    Satellite: {\r\n      Map: '//webst0{s}.is.autonavi.com/appmaptile?style=6&x={x}&y={y}&z={z}',\r\n      Annotion: '//webst0{s}.is.autonavi.com/appmaptile?style=8&x={x}&y={y}&z={z}'\r\n    },\r\n    Subdomains: [\"1\", \"2\", \"3\", \"4\"]\r\n  },\r\n\r\n  Google: {\r\n    Normal: {\r\n      Map: \"//www.google.cn/maps/vt?lyrs=m@189&gl=cn&x={x}&y={y}&z={z}\"\r\n    },\r\n    Satellite: {\r\n      Map: \"//www.google.cn/maps/vt?lyrs=s@189&gl=cn&x={x}&y={y}&z={z}\",\r\n      Annotion: \"//www.google.cn/maps/vt?lyrs=y@189&gl=cn&x={x}&y={y}&z={z}\"\r\n    },\r\n    Subdomains: []\r\n  },\r\n  Geoq: {\r\n    Normal: {\r\n      Map: \"//map.geoq.cn/ArcGIS/rest/services/ChinaOnlineCommunity/MapServer/tile/{z}/{y}/{x}\",\r\n      PurplishBlue: \"//map.geoq.cn/ArcGIS/rest/services/ChinaOnlineStreetPurplishBlue/MapServer/tile/{z}/{y}/{x}\",\r\n      Gray: \"//map.geoq.cn/ArcGIS/rest/services/ChinaOnlineStreetGray/MapServer/tile/{z}/{y}/{x}\",\r\n      Warm: \"//map.geoq.cn/ArcGIS/rest/services/ChinaOnlineStreetWarm/MapServer/tile/{z}/{y}/{x}\",\r\n    },\r\n    Theme: {\r\n      Hydro: \"//thematic.geoq.cn/arcgis/rest/services/ThematicMaps/WorldHydroMap/MapServer/tile/{z}/{y}/{x}\"\r\n    },\r\n    Subdomains: []\r\n  },\r\n  OSM: {\r\n    Normal: {\r\n      Map: \"//{s}.tile.osm.org/{z}/{x}/{y}.png\",\r\n    },\r\n    Subdomains: ['a', 'b', 'c']\r\n  },\r\n  Baidu: {\r\n    Normal: {\r\n      Map: '//online{s}.map.bdimg.com/onlinelabel/?qt=tile&x={x}&y={y}&z={z}&styles=pl&scaler=1&p=1'\r\n    },\r\n    Satellite: {\r\n      Map: '//shangetu{s}.map.bdimg.com/it/u=x={x};y={y};z={z};v=009;type=sate&fm=46',\r\n      Annotion: '//online{s}.map.bdimg.com/tile/?qt=tile&x={x}&y={y}&z={z}&styles=sl&v=020'\r\n    },\r\n    Subdomains: '0123456789',\r\n    tms: true\r\n  }\r\n};\r\n\r\nL.tileLayer.chinaProvider = function (type, options) {\r\n  return new L.TileLayer.ChinaProvider(type, options);\r\n};\r\n// L.map = (id, options) => {\r\n//   return new Map(id, options)\r\n// };\r\n// L.map = (id, options) => {\r\n//   return new L.TileLayer.ChinaProvider(id, options);\r\n// };\r\nexport default L\r\n","C:\\Users\\hekai\\Desktop\\前端学习\\my-app\\src\\plugins\\leaflet\\map.js",["298"],"import L from 'leaflet'\r\nconst MAX_ZOOM = 18;\r\nconst MIN_ZOOM = 2;\r\nconst GaoDe_URL = \"GaoDe.Normal.Map\";\r\n\r\n//这里重写了map的方法，防止重复加载相同类型地图\r\nlet Map = L.Map.extend({\r\n  options: {\r\n    _lastUsedMapType: null\r\n  }\r\n});\r\nMap.include({\r\n  getMapType: function() {\r\n    console.log('map.this',this)\r\n    return this.mapType;\r\n  },\r\n  setMapType: function(mapType) {\r\n    console.log(222)\r\n    console.log('map.this',this)\r\n    if (!mapType || mapType == this.mapType) {\r\n      return;\r\n    }\r\n    this.mapType = mapType;\r\n    // 防止重复加载相同类型地图\r\n    if (this.options._lastUsedMapType === mapType) {\r\n      return;\r\n    }\r\n    if (this.options._lastUsedMapType === null) {\r\n      this.options._lastUsedMapType = mapType;\r\n    }\r\n\r\n    if (this.layer) {\r\n      this.removeLayer(this.layer);\r\n    }\r\n\r\n    if (this.layer_overlay) {\r\n      this.removeLayer(this.layer_overlay);\r\n    }\r\n\r\n    let center = this.getCenter();\r\n    let zoom = this.getZoom();\r\n    // switch (mapType) {\r\n    //   case \"map\":\r\n    //     this._drawMapLayer();\r\n    //     break;\r\n    //   case \"baidu\":\r\n        \r\n    //     break;\r\n    // }\r\n    this._drawMapLayer();\r\n    this._resetView(center, zoom, true);\r\n    this.options._lastUsedMapType = mapType;\r\n  },\r\n  //这里相当于要对要支持的地图进行分析了\r\n  _drawMapLayer: function() {\r\n    let layer = L.tileLayer.chinaProvider(GaoDe_URL, {\r\n      maxZoom: MAX_ZOOM,\r\n      minZoom: MIN_ZOOM,\r\n      continuousWorld: true,\r\n    });\r\n    this.layer = layer;\r\n    this.addLayer(this.layer);\r\n  },\r\n});\r\nexport default Map;","C:\\Users\\hekai\\Desktop\\前端学习\\my-app\\src\\view\\map\\Map_test\\index.jsx",[],"C:\\Users\\hekai\\Desktop\\前端学习\\my-app\\src\\Mixin\\LocalStorageMixin\\LocalStorageMixin.js",[],"C:\\Users\\hekai\\Desktop\\前端学习\\my-app\\src\\Mixin\\SearchMixin\\SearchMixin.js",[],"C:\\Users\\hekai\\Desktop\\前端学习\\my-app\\src\\utils\\tool.js",[],"C:\\Users\\hekai\\Desktop\\前端学习\\my-app\\src\\components\\rule\\AddRuleDialog\\index.jsx",["299","300","301","302","303"],"import React from 'react'\r\nimport RegexInput from '../RegexInput'\r\nimport MinMaxInput from '../MinMaxInput'\r\nimport { useState, useEffect } from 'react'\r\nimport { Modal, Form, Select, Switch } from 'antd'\r\nimport { prettyDOM } from '@testing-library/react';\r\nconst { Option } = Select;\r\nexport default function AddRuleDialog(props) {\r\n  console.log('props_add', props)\r\n  const { tableName, isAddRuleDialogShow, setAddModalClose, fields, supportedRules, handleAddRuleClick, getFieldZh } = props\r\n  const [rule, setRule] = useState({\r\n    isDirtyData: true,\r\n    field: null,\r\n    regex: '',\r\n    val: {\r\n      minValue: null,\r\n      includeMin: false,\r\n      maxValue: null,\r\n      includeMax: false,\r\n    },\r\n  })\r\n  const [supportedRule, setSupportedRule] = useState([])\r\n  const [isRuleAddable, setIsRuleAddable] = useState(null)\r\n  useEffect(() => {\r\n    setIsRuleAddable((\r\n      rule?.regex !== '' ||\r\n      (rule?.val.minValue !== null && rule?.val.minValue !== '') ||\r\n      (rule?.val.maxValue !== null && rule?.val.maxValue !== '')\r\n    ))\r\n  }, [rule])\r\n\r\n  const onFinish = (values) => {\r\n    console.log(values);\r\n  };\r\n  const handleFieldSelectorChange = async (value) => {\r\n    setRule((prevRule) => ({\r\n      ...prevRule,\r\n      field: value\r\n    }))\r\n    setSupportedRule((prev) => (supportedRules[rule.field]))\r\n    // supportedRule = supportedRules[rule.field]\r\n  }\r\n  const handleFieldSwitchChange = async (checked, event) => {\r\n    setRule((prevRule) => ({\r\n      ...prevRule,\r\n      isDirtyData: checked\r\n    }))\r\n  }\r\n  return (\r\n    <Modal\r\n      footer={null}\r\n      title=\"添加规则\"\r\n      open={props.isAddRuleDialogShow}\r\n      onCancel={props.setAddModalClose}\r\n    >\r\n      <Form onFinish={onFinish} >\r\n        <Form.Item label=\"字段\" hasFeedback validateStatus='success' labelCol={{ span: 0 }} style={{ width: \"60%\" }}>\r\n          <Select\r\n            placeholder=\"请选择字段\"\r\n            value={rule.field}\r\n            onChange={handleFieldSelectorChange}\r\n          >\r\n            {fields.map((f, idx) => (\r\n              <Option key={idx} value={f}>\r\n                {getFieldZh(tableName, f)}\r\n              </Option>\r\n            ))}\r\n          </Select>\r\n\r\n        </Form.Item>\r\n        <Form.Item>\r\n          <Switch\r\n            checkedChildren=\"干净数据\"\r\n            unCheckedChildren=\"脏数据\"\r\n            onChange={handleFieldSwitchChange}\r\n          />\r\n        </Form.Item>\r\n        <>\r\n          {\r\n            rule.filed && supportedRule.map((r, idx) => {\r\n              return (\r\n                <React.Fragment key={idx}>\r\n                  {\r\n                    r.rule_type === 'regex' && (\r\n                      <RegexInput\r\n                        value={rule.regex}\r\n                        onChange={(value) => setRule(prevRule => ({ ...prevRule, regex: value }))}\r\n                        bindingPropName=\"regex\"\r\n                      >\r\n                      </RegexInput>\r\n                    )\r\n                  }\r\n                  {r.rule_type === 'min_max' && (\r\n                    <MinMaxInput\r\n                      value={rule.val}\r\n                      onChange={(value) => setRule(prevRule => ({ ...prevRule, val: value }))}\r\n                    />\r\n                  )}\r\n                </React.Fragment>\r\n              )\r\n            })\r\n          }\r\n        </>\r\n      </Form>\r\n    </Modal>\r\n  )\r\n}\r\n","C:\\Users\\hekai\\Desktop\\前端学习\\my-app\\src\\components\\rule\\RegexInput\\index.jsx",[],"C:\\Users\\hekai\\Desktop\\前端学习\\my-app\\src\\components\\rule\\MinMaxInput\\index.jsx",[],{"ruleId":"304","replacedBy":"305"},{"ruleId":"306","replacedBy":"307"},{"ruleId":"308","severity":1,"message":"309","line":2,"column":8,"nodeType":"310","messageId":"311","endLine":2,"endColumn":13},{"ruleId":"308","severity":1,"message":"312","line":2,"column":10,"nodeType":"310","messageId":"311","endLine":2,"endColumn":20},{"ruleId":"308","severity":1,"message":"313","line":2,"column":30,"nodeType":"310","messageId":"311","endLine":2,"endColumn":34},{"ruleId":"308","severity":1,"message":"314","line":2,"column":36,"nodeType":"310","messageId":"311","endLine":2,"endColumn":41},{"ruleId":"308","severity":1,"message":"315","line":7,"column":11,"nodeType":"310","messageId":"311","endLine":7,"endColumn":17},{"ruleId":"308","severity":1,"message":"316","line":7,"column":19,"nodeType":"310","messageId":"311","endLine":7,"endColumn":26},{"ruleId":"308","severity":1,"message":"317","line":7,"column":28,"nodeType":"310","messageId":"311","endLine":7,"endColumn":34},{"ruleId":"308","severity":1,"message":"318","line":1,"column":17,"nodeType":"310","messageId":"311","endLine":1,"endColumn":25},{"ruleId":"308","severity":1,"message":"319","line":3,"column":20,"nodeType":"310","messageId":"311","endLine":3,"endColumn":26},{"ruleId":"308","severity":1,"message":"320","line":4,"column":24,"nodeType":"310","messageId":"311","endLine":4,"endColumn":37},{"ruleId":"321","severity":1,"message":"322","line":143,"column":11,"nodeType":"323","endLine":143,"endColumn":50},{"ruleId":"324","severity":1,"message":"325","line":146,"column":15,"nodeType":"323","endLine":146,"endColumn":95},{"ruleId":"321","severity":1,"message":"322","line":164,"column":11,"nodeType":"323","endLine":164,"endColumn":50},{"ruleId":"324","severity":1,"message":"325","line":167,"column":15,"nodeType":"323","endLine":167,"endColumn":94},{"ruleId":"321","severity":1,"message":"322","line":185,"column":11,"nodeType":"323","endLine":185,"endColumn":50},{"ruleId":"324","severity":1,"message":"325","line":188,"column":15,"nodeType":"323","endLine":188,"endColumn":94},{"ruleId":"321","severity":1,"message":"322","line":206,"column":11,"nodeType":"323","endLine":206,"endColumn":50},{"ruleId":"324","severity":1,"message":"325","line":209,"column":15,"nodeType":"323","endLine":209,"endColumn":95},{"ruleId":"321","severity":1,"message":"322","line":227,"column":11,"nodeType":"323","endLine":227,"endColumn":50},{"ruleId":"324","severity":1,"message":"325","line":230,"column":15,"nodeType":"323","endLine":230,"endColumn":95},{"ruleId":"321","severity":1,"message":"322","line":248,"column":11,"nodeType":"323","endLine":248,"endColumn":50},{"ruleId":"324","severity":1,"message":"325","line":251,"column":15,"nodeType":"323","endLine":251,"endColumn":95},{"ruleId":"308","severity":1,"message":"326","line":32,"column":22,"nodeType":"310","messageId":"311","endLine":32,"endColumn":34},{"ruleId":"308","severity":1,"message":"327","line":2,"column":16,"nodeType":"310","messageId":"311","endLine":2,"endColumn":27},{"ruleId":"308","severity":1,"message":"312","line":3,"column":10,"nodeType":"310","messageId":"311","endLine":3,"endColumn":20},{"ruleId":"308","severity":1,"message":"314","line":3,"column":36,"nodeType":"310","messageId":"311","endLine":3,"endColumn":41},{"ruleId":"308","severity":1,"message":"328","line":4,"column":10,"nodeType":"310","messageId":"311","endLine":4,"endColumn":23},{"ruleId":"308","severity":1,"message":"315","line":7,"column":13,"nodeType":"310","messageId":"311","endLine":7,"endColumn":19},{"ruleId":"308","severity":1,"message":"316","line":7,"column":21,"nodeType":"310","messageId":"311","endLine":7,"endColumn":28},{"ruleId":"308","severity":1,"message":"317","line":7,"column":30,"nodeType":"310","messageId":"311","endLine":7,"endColumn":36},{"ruleId":"308","severity":1,"message":"329","line":7,"column":10,"nodeType":"310","messageId":"311","endLine":7,"endColumn":14},{"ruleId":"308","severity":1,"message":"330","line":7,"column":16,"nodeType":"310","messageId":"311","endLine":7,"endColumn":23},{"ruleId":"331","severity":1,"message":"332","line":23,"column":6,"nodeType":"333","endLine":23,"endColumn":8,"suggestions":"334"},{"ruleId":"331","severity":1,"message":"335","line":94,"column":6,"nodeType":"333","endLine":94,"endColumn":8,"suggestions":"336"},{"ruleId":"308","severity":1,"message":"337","line":5,"column":44,"nodeType":"310","messageId":"311","endLine":5,"endColumn":54},{"ruleId":"308","severity":1,"message":"338","line":14,"column":27,"nodeType":"310","messageId":"311","endLine":14,"endColumn":45},{"ruleId":"308","severity":1,"message":"339","line":88,"column":9,"nodeType":"310","messageId":"311","endLine":88,"endColumn":25},{"ruleId":"308","severity":1,"message":"340","line":95,"column":9,"nodeType":"310","messageId":"311","endLine":95,"endColumn":28},{"ruleId":"331","severity":1,"message":"335","line":104,"column":6,"nodeType":"333","endLine":104,"endColumn":8,"suggestions":"341"},{"ruleId":"308","severity":1,"message":"342","line":18,"column":22,"nodeType":"310","messageId":"311","endLine":18,"endColumn":35},{"ruleId":"308","severity":1,"message":"343","line":19,"column":9,"nodeType":"310","messageId":"311","endLine":19,"endColumn":20},{"ruleId":"331","severity":1,"message":"335","line":110,"column":6,"nodeType":"333","endLine":110,"endColumn":8,"suggestions":"344"},{"ruleId":"308","severity":1,"message":"345","line":5,"column":21,"nodeType":"310","messageId":"311","endLine":5,"endColumn":34},{"ruleId":"308","severity":1,"message":"346","line":34,"column":19,"nodeType":"310","messageId":"311","endLine":34,"endColumn":30},{"ruleId":"308","severity":1,"message":"347","line":1,"column":17,"nodeType":"310","messageId":"311","endLine":1,"endColumn":26},{"ruleId":"308","severity":1,"message":"348","line":2,"column":8,"nodeType":"310","messageId":"311","endLine":2,"endColumn":13},{"ruleId":"308","severity":1,"message":"349","line":5,"column":9,"nodeType":"310","messageId":"311","endLine":5,"endColumn":17},{"ruleId":"308","severity":1,"message":"350","line":33,"column":9,"nodeType":"310","messageId":"311","endLine":33,"endColumn":13},{"ruleId":"308","severity":1,"message":"347","line":1,"column":17,"nodeType":"310","messageId":"311","endLine":1,"endColumn":26},{"ruleId":"308","severity":1,"message":"348","line":2,"column":8,"nodeType":"310","messageId":"311","endLine":2,"endColumn":13},{"ruleId":"308","severity":1,"message":"349","line":5,"column":9,"nodeType":"310","messageId":"311","endLine":5,"endColumn":17},{"ruleId":"308","severity":1,"message":"350","line":33,"column":9,"nodeType":"310","messageId":"311","endLine":33,"endColumn":13},{"ruleId":"308","severity":1,"message":"351","line":4,"column":18,"nodeType":"310","messageId":"311","endLine":4,"endColumn":21},{"ruleId":"308","severity":1,"message":"352","line":4,"column":66,"nodeType":"310","messageId":"311","endLine":4,"endColumn":71},{"ruleId":"308","severity":1,"message":"353","line":5,"column":27,"nodeType":"310","messageId":"311","endLine":5,"endColumn":42},{"ruleId":"308","severity":1,"message":"354","line":12,"column":21,"nodeType":"310","messageId":"311","endLine":12,"endColumn":33},{"ruleId":"331","severity":1,"message":"355","line":35,"column":6,"nodeType":"333","endLine":35,"endColumn":17,"suggestions":"356"},{"ruleId":"331","severity":1,"message":"357","line":43,"column":6,"nodeType":"333","endLine":43,"endColumn":12,"suggestions":"358"},{"ruleId":"308","severity":1,"message":"359","line":44,"column":28,"nodeType":"310","messageId":"311","endLine":44,"endColumn":47},{"ruleId":"308","severity":1,"message":"360","line":45,"column":10,"nodeType":"310","messageId":"311","endLine":45,"endColumn":36},{"ruleId":"308","severity":1,"message":"361","line":45,"column":38,"nodeType":"310","messageId":"311","endLine":45,"endColumn":61},{"ruleId":"308","severity":1,"message":"362","line":46,"column":10,"nodeType":"310","messageId":"311","endLine":46,"endColumn":21},{"ruleId":"308","severity":1,"message":"363","line":47,"column":25,"nodeType":"310","messageId":"311","endLine":47,"endColumn":41},{"ruleId":"308","severity":1,"message":"364","line":48,"column":27,"nodeType":"310","messageId":"311","endLine":48,"endColumn":45},{"ruleId":"308","severity":1,"message":"365","line":49,"column":20,"nodeType":"310","messageId":"311","endLine":49,"endColumn":31},{"ruleId":"331","severity":1,"message":"366","line":65,"column":6,"nodeType":"333","endLine":65,"endColumn":18,"suggestions":"367"},{"ruleId":"331","severity":1,"message":"368","line":76,"column":6,"nodeType":"333","endLine":76,"endColumn":12,"suggestions":"369"},{"ruleId":"370","severity":1,"message":"371","line":151,"column":15,"nodeType":"310","messageId":"372","endLine":151,"endColumn":19},{"ruleId":"308","severity":1,"message":"373","line":9,"column":10,"nodeType":"310","messageId":"311","endLine":9,"endColumn":15},{"ruleId":"308","severity":1,"message":"374","line":9,"column":17,"nodeType":"310","messageId":"311","endLine":9,"endColumn":25},{"ruleId":"308","severity":1,"message":"375","line":10,"column":10,"nodeType":"310","messageId":"311","endLine":10,"endColumn":14},{"ruleId":"308","severity":1,"message":"376","line":10,"column":16,"nodeType":"310","messageId":"311","endLine":10,"endColumn":23},{"ruleId":"308","severity":1,"message":"377","line":12,"column":16,"nodeType":"310","messageId":"311","endLine":12,"endColumn":23},{"ruleId":"308","severity":1,"message":"378","line":14,"column":10,"nodeType":"310","messageId":"311","endLine":14,"endColumn":17},{"ruleId":"308","severity":1,"message":"379","line":14,"column":19,"nodeType":"310","messageId":"311","endLine":14,"endColumn":29},{"ruleId":"308","severity":1,"message":"380","line":18,"column":18,"nodeType":"310","messageId":"311","endLine":18,"endColumn":27},{"ruleId":"308","severity":1,"message":"381","line":19,"column":10,"nodeType":"310","messageId":"311","endLine":19,"endColumn":16},{"ruleId":"308","severity":1,"message":"382","line":19,"column":18,"nodeType":"310","messageId":"311","endLine":19,"endColumn":27},{"ruleId":"308","severity":1,"message":"383","line":20,"column":10,"nodeType":"310","messageId":"311","endLine":20,"endColumn":16},{"ruleId":"308","severity":1,"message":"384","line":20,"column":18,"nodeType":"310","messageId":"311","endLine":20,"endColumn":27},{"ruleId":"308","severity":1,"message":"385","line":30,"column":10,"nodeType":"310","messageId":"311","endLine":30,"endColumn":18},{"ruleId":"308","severity":1,"message":"386","line":30,"column":20,"nodeType":"310","messageId":"311","endLine":30,"endColumn":31},{"ruleId":"387","severity":1,"message":"388","line":65,"column":20,"nodeType":"389","messageId":"390","endLine":65,"endColumn":22},{"ruleId":"387","severity":1,"message":"388","line":72,"column":20,"nodeType":"389","messageId":"390","endLine":72,"endColumn":22},{"ruleId":"387","severity":1,"message":"388","line":85,"column":25,"nodeType":"389","messageId":"390","endLine":85,"endColumn":27},{"ruleId":"387","severity":1,"message":"388","line":114,"column":15,"nodeType":"389","messageId":"390","endLine":114,"endColumn":17},{"ruleId":"370","severity":1,"message":"391","line":115,"column":7,"nodeType":"310","messageId":"372","endLine":115,"endColumn":25},{"ruleId":"370","severity":1,"message":"392","line":116,"column":7,"nodeType":"310","messageId":"372","endLine":116,"endColumn":17},{"ruleId":"308","severity":1,"message":"393","line":157,"column":9,"nodeType":"310","messageId":"311","endLine":157,"endColumn":25},{"ruleId":"370","severity":1,"message":"394","line":158,"column":5,"nodeType":"310","messageId":"372","endLine":158,"endColumn":11},{"ruleId":"370","severity":1,"message":"395","line":159,"column":5,"nodeType":"310","messageId":"372","endLine":159,"endColumn":11},{"ruleId":"370","severity":1,"message":"396","line":160,"column":5,"nodeType":"310","messageId":"372","endLine":160,"endColumn":11},{"ruleId":"370","severity":1,"message":"397","line":161,"column":5,"nodeType":"310","messageId":"372","endLine":161,"endColumn":15},{"ruleId":"370","severity":1,"message":"398","line":162,"column":5,"nodeType":"310","messageId":"372","endLine":162,"endColumn":15},{"ruleId":"370","severity":1,"message":"399","line":163,"column":5,"nodeType":"310","messageId":"372","endLine":163,"endColumn":15},{"ruleId":"387","severity":1,"message":"388","line":166,"column":20,"nodeType":"389","messageId":"390","endLine":166,"endColumn":22},{"ruleId":"387","severity":1,"message":"400","line":184,"column":26,"nodeType":"389","messageId":"390","endLine":184,"endColumn":28},{"ruleId":"387","severity":1,"message":"388","line":189,"column":25,"nodeType":"389","messageId":"390","endLine":189,"endColumn":27},{"ruleId":"331","severity":1,"message":"401","line":199,"column":5,"nodeType":"333","endLine":199,"endColumn":7,"suggestions":"402"},{"ruleId":"308","severity":1,"message":"403","line":6,"column":24,"nodeType":"310","messageId":"311","endLine":6,"endColumn":28},{"ruleId":"308","severity":1,"message":"404","line":9,"column":10,"nodeType":"310","messageId":"311","endLine":9,"endColumn":20},{"ruleId":"308","severity":1,"message":"405","line":10,"column":19,"nodeType":"310","messageId":"311","endLine":10,"endColumn":29},{"ruleId":"308","severity":1,"message":"406","line":11,"column":10,"nodeType":"310","messageId":"311","endLine":11,"endColumn":14},{"ruleId":"308","severity":1,"message":"407","line":12,"column":10,"nodeType":"310","messageId":"311","endLine":12,"endColumn":17},{"ruleId":"308","severity":1,"message":"350","line":13,"column":10,"nodeType":"310","messageId":"311","endLine":13,"endColumn":14},{"ruleId":"308","severity":1,"message":"408","line":13,"column":16,"nodeType":"310","messageId":"311","endLine":13,"endColumn":23},{"ruleId":"308","severity":1,"message":"409","line":14,"column":10,"nodeType":"310","messageId":"311","endLine":14,"endColumn":23},{"ruleId":"308","severity":1,"message":"410","line":14,"column":25,"nodeType":"310","messageId":"311","endLine":14,"endColumn":41},{"ruleId":"308","severity":1,"message":"411","line":15,"column":10,"nodeType":"310","messageId":"311","endLine":15,"endColumn":15},{"ruleId":"308","severity":1,"message":"412","line":15,"column":17,"nodeType":"310","messageId":"311","endLine":15,"endColumn":25},{"ruleId":"370","severity":1,"message":"413","line":63,"column":5,"nodeType":"310","messageId":"372","endLine":63,"endColumn":10},{"ruleId":"387","severity":1,"message":"388","line":66,"column":17,"nodeType":"389","messageId":"390","endLine":66,"endColumn":19},{"ruleId":"308","severity":1,"message":"414","line":13,"column":10,"nodeType":"310","messageId":"311","endLine":13,"endColumn":16},{"ruleId":"308","severity":1,"message":"415","line":13,"column":18,"nodeType":"310","messageId":"311","endLine":13,"endColumn":27},{"ruleId":"308","severity":1,"message":"416","line":16,"column":17,"nodeType":"310","messageId":"311","endLine":16,"endColumn":25},{"ruleId":"308","severity":1,"message":"417","line":23,"column":10,"nodeType":"310","messageId":"311","endLine":23,"endColumn":20},{"ruleId":"308","severity":1,"message":"418","line":24,"column":10,"nodeType":"310","messageId":"311","endLine":24,"endColumn":20},{"ruleId":"308","severity":1,"message":"419","line":32,"column":10,"nodeType":"310","messageId":"311","endLine":32,"endColumn":13},{"ruleId":"308","severity":1,"message":"420","line":35,"column":10,"nodeType":"310","messageId":"311","endLine":35,"endColumn":23},{"ruleId":"308","severity":1,"message":"421","line":38,"column":10,"nodeType":"310","messageId":"311","endLine":38,"endColumn":15},{"ruleId":"331","severity":1,"message":"422","line":263,"column":5,"nodeType":"333","endLine":263,"endColumn":7,"suggestions":"423"},{"ruleId":"308","severity":1,"message":"347","line":2,"column":20,"nodeType":"310","messageId":"311","endLine":2,"endColumn":29},{"ruleId":"308","severity":1,"message":"424","line":2,"column":31,"nodeType":"310","messageId":"311","endLine":2,"endColumn":38},{"ruleId":"308","severity":1,"message":"425","line":7,"column":8,"nodeType":"310","messageId":"311","endLine":7,"endColumn":16},{"ruleId":"308","severity":1,"message":"426","line":11,"column":16,"nodeType":"310","messageId":"311","endLine":11,"endColumn":23},{"ruleId":"308","severity":1,"message":"427","line":3,"column":8,"nodeType":"310","messageId":"311","endLine":3,"endColumn":11},{"ruleId":"387","severity":1,"message":"388","line":20,"column":29,"nodeType":"389","messageId":"390","endLine":20,"endColumn":31},{"ruleId":"308","severity":1,"message":"428","line":6,"column":10,"nodeType":"310","messageId":"311","endLine":6,"endColumn":19},{"ruleId":"308","severity":1,"message":"429","line":10,"column":22,"nodeType":"310","messageId":"311","endLine":10,"endColumn":41},{"ruleId":"308","severity":1,"message":"430","line":10,"column":43,"nodeType":"310","messageId":"311","endLine":10,"endColumn":59},{"ruleId":"308","severity":1,"message":"431","line":10,"column":85,"nodeType":"310","messageId":"311","endLine":10,"endColumn":103},{"ruleId":"308","severity":1,"message":"432","line":23,"column":10,"nodeType":"310","messageId":"311","endLine":23,"endColumn":23},"no-native-reassign",["433"],"no-negated-in-lhs",["434"],"no-unused-vars","'React' is defined but never used.","Identifier","unusedVar","'Breadcrumb' is defined but never used.","'Menu' is defined but never used.","'theme' is defined but never used.","'Header' is assigned a value but never used.","'Content' is assigned a value but never used.","'Footer' is assigned a value but never used.","'useState' is defined but never used.","'Button' is defined but never used.","'SmileOutlined' is defined but never used.","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/jsx-eslint/eslint-plugin-jsx-a11y/blob/HEAD/docs/rules/anchor-is-valid.md","JSXOpeningElement","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","'setLoginForm' is assigned a value but never used.","'useLocation' is defined but never used.","'RocketTwoTone' is defined but never used.","'sign' is assigned a value but never used.","'setSign' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'timer'. Either include it or remove the dependency array.","ArrayExpression",["435"],"React Hook useEffect has a missing dependency: 'queryDatas'. Either include it or remove the dependency array.",["436"],"'Pagination' is defined but never used.","'setDetectionMetric' is assigned a value but never used.","'handleSizeChange' is assigned a value but never used.","'handleCurrentChange' is assigned a value but never used.",["437"],"'setCleanIndex' is assigned a value but never used.","'mergedArrow' is assigned a value but never used.",["438"],"'setConditions' is assigned a value but never used.","'setDataList' is assigned a value but never used.","'useEffect' is defined but never used.","'flvjs' is defined but never used.","'videoRef' is assigned a value but never used.","'play' is assigned a value but never used.","'Tag' is defined but never used.","'Modal' is defined but never used.","'getLocalStorage' is defined but never used.","'setTableName' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'fetchTableData' and 'search'. Either include them or remove the dependency array.",["439"],"React Hook useEffect has missing dependencies: 'saveRules' and 'search'. Either include them or remove the dependency array.",["440"],"'setEditingRuleIndex' is assigned a value but never used.","'isEditRuleDialogShowleData' is assigned a value but never used.","'setIsEditRuleDialogShow' is assigned a value but never used.","'matchedList' is assigned a value but never used.","'setSupportedRule' is assigned a value but never used.","'setSupportedFields' is assigned a value but never used.","'setFieldMap' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'getFields' and 'tableName'. Either include them or remove the dependency array. You can also replace multiple useState variables with useReducer if 'setFields' needs the current value of 'tableName'.",["441"],"React Hook useEffect has a missing dependency: 'tableName'. Either include it or remove the dependency array. You can also replace multiple useState variables with useReducer if 'setRuleForRequest' needs the current value of 'tableName'.",["442"],"no-const-assign","'rule' is constant.","const","'radio' is assigned a value but never used.","'setRadio' is assigned a value but never used.","'form' is assigned a value but never used.","'setForm' is assigned a value but never used.","'setNumb' is assigned a value but never used.","'visible' is assigned a value but never used.","'setVisible' is assigned a value but never used.","'setCheck1' is assigned a value but never used.","'check2' is assigned a value but never used.","'setCheck2' is assigned a value but never used.","'check3' is assigned a value but never used.","'setCheck3' is assigned a value but never used.","'gridData' is assigned a value but never used.","'setGridData' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'dialogTableVisible' is constant.","'buttonshow' is constant.","'changelabelalign' is assigned a value but never used.","'check1' is constant.","'check2' is constant.","'check3' is constant.","'showinput1' is constant.","'showinput2' is constant.","'showinput3' is constant.","Expected '!==' and instead saw '!='.","React Hook useEffect has a missing dependency: 'getTableData'. Either include it or remove the dependency array.",["443"],"'Span' is defined but never used.","'showViewer' is assigned a value but never used.","'setSrcList' is assigned a value but never used.","'rate' is assigned a value but never used.","'canPlay' is assigned a value but never used.","'setPlay' is assigned a value but never used.","'dialogVisible' is assigned a value but never used.","'setDialogVisible' is assigned a value but never used.","'index' is assigned a value but never used.","'setIndex' is assigned a value but never used.","'index' is constant.","'expire' is assigned a value but never used.","'setExpire' is assigned a value but never used.","'setWidth' is assigned a value but never used.","'getnumber1' is assigned a value but never used.","'getnumber2' is assigned a value but never used.","'url' is assigned a value but never used.","'searchloading' is assigned a value but never used.","'isend' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'fetchTableData'. Either include it or remove the dependency array.",["444"],"'useMemo' is defined but never used.","'Map_test' is defined but never used.","'setData' is assigned a value but never used.","'Map' is defined but never used.","'prettyDOM' is defined but never used.","'isAddRuleDialogShow' is assigned a value but never used.","'setAddModalClose' is assigned a value but never used.","'handleAddRuleClick' is assigned a value but never used.","'isRuleAddable' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"445","fix":"446"},{"desc":"447","fix":"448"},{"desc":"447","fix":"449"},{"desc":"447","fix":"450"},{"desc":"451","fix":"452"},{"desc":"453","fix":"454"},{"desc":"455","fix":"456"},{"desc":"457","fix":"458"},{"desc":"459","fix":"460"},{"desc":"461","fix":"462"},"Update the dependencies array to be: [timer]",{"range":"463","text":"464"},"Update the dependencies array to be: [queryDatas]",{"range":"465","text":"466"},{"range":"467","text":"466"},{"range":"468","text":"466"},"Update the dependencies array to be: [fetchTableData, queryInfo, search]",{"range":"469","text":"470"},"Update the dependencies array to be: [rule, saveRules, search]",{"range":"471","text":"472"},"Update the dependencies array to be: [getFields, tableName, tableNames]",{"range":"473","text":"474"},"Update the dependencies array to be: [rule, tableName]",{"range":"475","text":"476"},"Update the dependencies array to be: [getTableData]",{"range":"477","text":"478"},"Update the dependencies array to be: [fetchTableData]",{"range":"479","text":"480"},[683,685],"[timer]",[2288,2290],"[queryDatas]",[2603,2605],[2735,2737],[1216,1227],"[fetchTableData, queryInfo, search]",[1465,1471],"[rule, saveRules, search]",[2215,2227],"[getFields, tableName, tableNames]",[2527,2533],"[rule, tableName]",[5458,5460],"[getTableData]",[7399,7401],"[fetchTableData]"]